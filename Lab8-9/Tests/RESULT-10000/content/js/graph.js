/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 53.0, "minX": 0.0, "maxY": 3345.0, "series": [{"data": [[0.0, 252.0], [0.1, 252.0], [0.2, 252.0], [0.3, 252.0], [0.4, 252.0], [0.5, 252.0], [0.6, 252.0], [0.7, 252.0], [0.8, 252.0], [0.9, 252.0], [1.0, 252.0], [1.1, 252.0], [1.2, 252.0], [1.3, 252.0], [1.4, 252.0], [1.5, 252.0], [1.6, 252.0], [1.7, 252.0], [1.8, 252.0], [1.9, 252.0], [2.0, 252.0], [2.1, 252.0], [2.2, 252.0], [2.3, 252.0], [2.4, 270.0], [2.5, 270.0], [2.6, 270.0], [2.7, 270.0], [2.8, 270.0], [2.9, 270.0], [3.0, 270.0], [3.1, 270.0], [3.2, 270.0], [3.3, 270.0], [3.4, 270.0], [3.5, 270.0], [3.6, 270.0], [3.7, 270.0], [3.8, 270.0], [3.9, 270.0], [4.0, 270.0], [4.1, 270.0], [4.2, 270.0], [4.3, 270.0], [4.4, 270.0], [4.5, 270.0], [4.6, 270.0], [4.7, 270.0], [4.8, 1221.0], [4.9, 1221.0], [5.0, 1221.0], [5.1, 1221.0], [5.2, 1221.0], [5.3, 1221.0], [5.4, 1221.0], [5.5, 1221.0], [5.6, 1221.0], [5.7, 1221.0], [5.8, 1221.0], [5.9, 1221.0], [6.0, 1221.0], [6.1, 1221.0], [6.2, 1221.0], [6.3, 1221.0], [6.4, 1221.0], [6.5, 1221.0], [6.6, 1221.0], [6.7, 1221.0], [6.8, 1221.0], [6.9, 1221.0], [7.0, 1221.0], [7.1, 1221.0], [7.2, 1225.0], [7.3, 1225.0], [7.4, 1225.0], [7.5, 1225.0], [7.6, 1225.0], [7.7, 1225.0], [7.8, 1225.0], [7.9, 1225.0], [8.0, 1225.0], [8.1, 1225.0], [8.2, 1225.0], [8.3, 1225.0], [8.4, 1225.0], [8.5, 1225.0], [8.6, 1225.0], [8.7, 1225.0], [8.8, 1225.0], [8.9, 1225.0], [9.0, 1225.0], [9.1, 1225.0], [9.2, 1225.0], [9.3, 1225.0], [9.4, 1225.0], [9.5, 1225.0], [9.6, 1227.0], [9.7, 1227.0], [9.8, 1227.0], [9.9, 1227.0], [10.0, 1227.0], [10.1, 1227.0], [10.2, 1227.0], [10.3, 1227.0], [10.4, 1227.0], [10.5, 1227.0], [10.6, 1227.0], [10.7, 1227.0], [10.8, 1227.0], [10.9, 1227.0], [11.0, 1227.0], [11.1, 1227.0], [11.2, 1227.0], [11.3, 1227.0], [11.4, 1227.0], [11.5, 1227.0], [11.6, 1227.0], [11.7, 1227.0], [11.8, 1227.0], [11.9, 1227.0], [12.0, 1227.0], [12.1, 1227.0], [12.2, 1227.0], [12.3, 1227.0], [12.4, 1227.0], [12.5, 1227.0], [12.6, 1227.0], [12.7, 1227.0], [12.8, 1227.0], [12.9, 1227.0], [13.0, 1227.0], [13.1, 1227.0], [13.2, 1227.0], [13.3, 1227.0], [13.4, 1227.0], [13.5, 1227.0], [13.6, 1227.0], [13.7, 1227.0], [13.8, 1227.0], [13.9, 1227.0], [14.0, 1227.0], [14.1, 1227.0], [14.2, 1227.0], [14.3, 1228.0], [14.4, 1228.0], [14.5, 1228.0], [14.6, 1228.0], [14.7, 1228.0], [14.8, 1228.0], [14.9, 1228.0], [15.0, 1228.0], [15.1, 1228.0], [15.2, 1228.0], [15.3, 1228.0], [15.4, 1228.0], [15.5, 1228.0], [15.6, 1228.0], [15.7, 1228.0], [15.8, 1228.0], [15.9, 1228.0], [16.0, 1228.0], [16.1, 1228.0], [16.2, 1228.0], [16.3, 1228.0], [16.4, 1228.0], [16.5, 1228.0], [16.6, 1228.0], [16.7, 1230.0], [16.8, 1230.0], [16.9, 1230.0], [17.0, 1230.0], [17.1, 1230.0], [17.2, 1230.0], [17.3, 1230.0], [17.4, 1230.0], [17.5, 1230.0], [17.6, 1230.0], [17.7, 1230.0], [17.8, 1230.0], [17.9, 1230.0], [18.0, 1230.0], [18.1, 1230.0], [18.2, 1230.0], [18.3, 1230.0], [18.4, 1230.0], [18.5, 1230.0], [18.6, 1230.0], [18.7, 1230.0], [18.8, 1230.0], [18.9, 1230.0], [19.0, 1230.0], [19.1, 1230.0], [19.2, 1230.0], [19.3, 1230.0], [19.4, 1230.0], [19.5, 1230.0], [19.6, 1230.0], [19.7, 1230.0], [19.8, 1230.0], [19.9, 1230.0], [20.0, 1230.0], [20.1, 1230.0], [20.2, 1230.0], [20.3, 1230.0], [20.4, 1230.0], [20.5, 1230.0], [20.6, 1230.0], [20.7, 1230.0], [20.8, 1230.0], [20.9, 1230.0], [21.0, 1230.0], [21.1, 1230.0], [21.2, 1230.0], [21.3, 1230.0], [21.4, 1230.0], [21.5, 1231.0], [21.6, 1231.0], [21.7, 1231.0], [21.8, 1231.0], [21.9, 1231.0], [22.0, 1231.0], [22.1, 1231.0], [22.2, 1231.0], [22.3, 1231.0], [22.4, 1231.0], [22.5, 1231.0], [22.6, 1231.0], [22.7, 1231.0], [22.8, 1231.0], [22.9, 1231.0], [23.0, 1231.0], [23.1, 1231.0], [23.2, 1231.0], [23.3, 1231.0], [23.4, 1231.0], [23.5, 1231.0], [23.6, 1231.0], [23.7, 1231.0], [23.8, 1231.0], [23.9, 1232.0], [24.0, 1232.0], [24.1, 1232.0], [24.2, 1232.0], [24.3, 1232.0], [24.4, 1232.0], [24.5, 1232.0], [24.6, 1232.0], [24.7, 1232.0], [24.8, 1232.0], [24.9, 1232.0], [25.0, 1232.0], [25.1, 1232.0], [25.2, 1232.0], [25.3, 1232.0], [25.4, 1232.0], [25.5, 1232.0], [25.6, 1232.0], [25.7, 1232.0], [25.8, 1232.0], [25.9, 1232.0], [26.0, 1232.0], [26.1, 1232.0], [26.2, 1233.0], [26.3, 1233.0], [26.4, 1233.0], [26.5, 1233.0], [26.6, 1233.0], [26.7, 1233.0], [26.8, 1233.0], [26.9, 1233.0], [27.0, 1233.0], [27.1, 1233.0], [27.2, 1233.0], [27.3, 1233.0], [27.4, 1233.0], [27.5, 1233.0], [27.6, 1233.0], [27.7, 1233.0], [27.8, 1233.0], [27.9, 1233.0], [28.0, 1233.0], [28.1, 1233.0], [28.2, 1233.0], [28.3, 1233.0], [28.4, 1233.0], [28.5, 1233.0], [28.6, 1234.0], [28.7, 1234.0], [28.8, 1234.0], [28.9, 1234.0], [29.0, 1234.0], [29.1, 1234.0], [29.2, 1234.0], [29.3, 1234.0], [29.4, 1234.0], [29.5, 1234.0], [29.6, 1234.0], [29.7, 1234.0], [29.8, 1234.0], [29.9, 1234.0], [30.0, 1234.0], [30.1, 1234.0], [30.2, 1234.0], [30.3, 1234.0], [30.4, 1234.0], [30.5, 1234.0], [30.6, 1234.0], [30.7, 1234.0], [30.8, 1234.0], [30.9, 1234.0], [31.0, 1234.0], [31.1, 1234.0], [31.2, 1234.0], [31.3, 1234.0], [31.4, 1234.0], [31.5, 1234.0], [31.6, 1234.0], [31.7, 1234.0], [31.8, 1234.0], [31.9, 1234.0], [32.0, 1234.0], [32.1, 1234.0], [32.2, 1234.0], [32.3, 1234.0], [32.4, 1234.0], [32.5, 1234.0], [32.6, 1234.0], [32.7, 1234.0], [32.8, 1234.0], [32.9, 1234.0], [33.0, 1234.0], [33.1, 1234.0], [33.2, 1234.0], [33.3, 1234.0], [33.4, 1237.0], [33.5, 1237.0], [33.6, 1237.0], [33.7, 1237.0], [33.8, 1237.0], [33.9, 1237.0], [34.0, 1237.0], [34.1, 1237.0], [34.2, 1237.0], [34.3, 1237.0], [34.4, 1237.0], [34.5, 1237.0], [34.6, 1237.0], [34.7, 1237.0], [34.8, 1237.0], [34.9, 1237.0], [35.0, 1237.0], [35.1, 1237.0], [35.2, 1237.0], [35.3, 1237.0], [35.4, 1237.0], [35.5, 1237.0], [35.6, 1237.0], [35.7, 1237.0], [35.8, 1239.0], [35.9, 1239.0], [36.0, 1239.0], [36.1, 1239.0], [36.2, 1239.0], [36.3, 1239.0], [36.4, 1239.0], [36.5, 1239.0], [36.6, 1239.0], [36.7, 1239.0], [36.8, 1239.0], [36.9, 1239.0], [37.0, 1239.0], [37.1, 1239.0], [37.2, 1239.0], [37.3, 1239.0], [37.4, 1239.0], [37.5, 1239.0], [37.6, 1239.0], [37.7, 1239.0], [37.8, 1239.0], [37.9, 1239.0], [38.0, 1239.0], [38.1, 1242.0], [38.2, 1242.0], [38.3, 1242.0], [38.4, 1242.0], [38.5, 1242.0], [38.6, 1242.0], [38.7, 1242.0], [38.8, 1242.0], [38.9, 1242.0], [39.0, 1242.0], [39.1, 1242.0], [39.2, 1242.0], [39.3, 1242.0], [39.4, 1242.0], [39.5, 1242.0], [39.6, 1242.0], [39.7, 1242.0], [39.8, 1242.0], [39.9, 1242.0], [40.0, 1242.0], [40.1, 1242.0], [40.2, 1242.0], [40.3, 1242.0], [40.4, 1242.0], [40.5, 1242.0], [40.6, 1242.0], [40.7, 1242.0], [40.8, 1242.0], [40.9, 1242.0], [41.0, 1242.0], [41.1, 1242.0], [41.2, 1242.0], [41.3, 1242.0], [41.4, 1242.0], [41.5, 1242.0], [41.6, 1242.0], [41.7, 1242.0], [41.8, 1242.0], [41.9, 1242.0], [42.0, 1242.0], [42.1, 1242.0], [42.2, 1242.0], [42.3, 1242.0], [42.4, 1242.0], [42.5, 1242.0], [42.6, 1242.0], [42.7, 1242.0], [42.8, 1242.0], [42.9, 1242.0], [43.0, 1242.0], [43.1, 1242.0], [43.2, 1242.0], [43.3, 1242.0], [43.4, 1242.0], [43.5, 1242.0], [43.6, 1242.0], [43.7, 1242.0], [43.8, 1242.0], [43.9, 1242.0], [44.0, 1242.0], [44.1, 1242.0], [44.2, 1242.0], [44.3, 1242.0], [44.4, 1242.0], [44.5, 1242.0], [44.6, 1242.0], [44.7, 1242.0], [44.8, 1242.0], [44.9, 1242.0], [45.0, 1242.0], [45.1, 1242.0], [45.2, 1242.0], [45.3, 1244.0], [45.4, 1244.0], [45.5, 1244.0], [45.6, 1244.0], [45.7, 1244.0], [45.8, 1244.0], [45.9, 1244.0], [46.0, 1244.0], [46.1, 1244.0], [46.2, 1244.0], [46.3, 1244.0], [46.4, 1244.0], [46.5, 1244.0], [46.6, 1244.0], [46.7, 1244.0], [46.8, 1244.0], [46.9, 1244.0], [47.0, 1244.0], [47.1, 1244.0], [47.2, 1244.0], [47.3, 1244.0], [47.4, 1244.0], [47.5, 1244.0], [47.6, 1244.0], [47.7, 1245.0], [47.8, 1245.0], [47.9, 1245.0], [48.0, 1245.0], [48.1, 1245.0], [48.2, 1245.0], [48.3, 1245.0], [48.4, 1245.0], [48.5, 1245.0], [48.6, 1245.0], [48.7, 1245.0], [48.8, 1245.0], [48.9, 1245.0], [49.0, 1245.0], [49.1, 1245.0], [49.2, 1245.0], [49.3, 1245.0], [49.4, 1245.0], [49.5, 1245.0], [49.6, 1245.0], [49.7, 1245.0], [49.8, 1245.0], [49.9, 1245.0], [50.0, 1245.0], [50.1, 1245.0], [50.2, 1245.0], [50.3, 1245.0], [50.4, 1245.0], [50.5, 1245.0], [50.6, 1245.0], [50.7, 1245.0], [50.8, 1245.0], [50.9, 1245.0], [51.0, 1245.0], [51.1, 1245.0], [51.2, 1245.0], [51.3, 1245.0], [51.4, 1245.0], [51.5, 1245.0], [51.6, 1245.0], [51.7, 1245.0], [51.8, 1245.0], [51.9, 1245.0], [52.0, 1245.0], [52.1, 1245.0], [52.2, 1245.0], [52.3, 1245.0], [52.4, 1246.0], [52.5, 1246.0], [52.6, 1246.0], [52.7, 1246.0], [52.8, 1246.0], [52.9, 1246.0], [53.0, 1246.0], [53.1, 1246.0], [53.2, 1246.0], [53.3, 1246.0], [53.4, 1246.0], [53.5, 1246.0], [53.6, 1246.0], [53.7, 1246.0], [53.8, 1246.0], [53.9, 1246.0], [54.0, 1246.0], [54.1, 1246.0], [54.2, 1246.0], [54.3, 1246.0], [54.4, 1246.0], [54.5, 1246.0], [54.6, 1246.0], [54.7, 1246.0], [54.8, 1249.0], [54.9, 1249.0], [55.0, 1249.0], [55.1, 1249.0], [55.2, 1249.0], [55.3, 1249.0], [55.4, 1249.0], [55.5, 1249.0], [55.6, 1249.0], [55.7, 1249.0], [55.8, 1249.0], [55.9, 1249.0], [56.0, 1249.0], [56.1, 1249.0], [56.2, 1249.0], [56.3, 1249.0], [56.4, 1249.0], [56.5, 1249.0], [56.6, 1249.0], [56.7, 1249.0], [56.8, 1249.0], [56.9, 1249.0], [57.0, 1249.0], [57.1, 1249.0], [57.2, 1249.0], [57.3, 1249.0], [57.4, 1249.0], [57.5, 1249.0], [57.6, 1249.0], [57.7, 1249.0], [57.8, 1249.0], [57.9, 1249.0], [58.0, 1249.0], [58.1, 1249.0], [58.2, 1249.0], [58.3, 1249.0], [58.4, 1249.0], [58.5, 1249.0], [58.6, 1249.0], [58.7, 1249.0], [58.8, 1249.0], [58.9, 1249.0], [59.0, 1249.0], [59.1, 1249.0], [59.2, 1249.0], [59.3, 1249.0], [59.4, 1249.0], [59.5, 1249.0], [59.6, 1250.0], [59.7, 1250.0], [59.8, 1250.0], [59.9, 1250.0], [60.0, 1250.0], [60.1, 1250.0], [60.2, 1250.0], [60.3, 1250.0], [60.4, 1250.0], [60.5, 1250.0], [60.6, 1250.0], [60.7, 1250.0], [60.8, 1250.0], [60.9, 1250.0], [61.0, 1250.0], [61.1, 1250.0], [61.2, 1250.0], [61.3, 1250.0], [61.4, 1250.0], [61.5, 1250.0], [61.6, 1250.0], [61.7, 1250.0], [61.8, 1250.0], [61.9, 1250.0], [62.0, 1253.0], [62.1, 1253.0], [62.2, 1253.0], [62.3, 1253.0], [62.4, 1253.0], [62.5, 1253.0], [62.6, 1253.0], [62.7, 1253.0], [62.8, 1253.0], [62.9, 1253.0], [63.0, 1253.0], [63.1, 1253.0], [63.2, 1253.0], [63.3, 1253.0], [63.4, 1253.0], [63.5, 1253.0], [63.6, 1253.0], [63.7, 1253.0], [63.8, 1253.0], [63.9, 1253.0], [64.0, 1253.0], [64.1, 1253.0], [64.2, 1253.0], [64.3, 1255.0], [64.4, 1255.0], [64.5, 1255.0], [64.6, 1255.0], [64.7, 1255.0], [64.8, 1255.0], [64.9, 1255.0], [65.0, 1255.0], [65.1, 1255.0], [65.2, 1255.0], [65.3, 1255.0], [65.4, 1255.0], [65.5, 1255.0], [65.6, 1255.0], [65.7, 1255.0], [65.8, 1255.0], [65.9, 1255.0], [66.0, 1255.0], [66.1, 1255.0], [66.2, 1255.0], [66.3, 1255.0], [66.4, 1255.0], [66.5, 1255.0], [66.6, 1255.0], [66.7, 1255.0], [66.8, 1255.0], [66.9, 1255.0], [67.0, 1255.0], [67.1, 1255.0], [67.2, 1255.0], [67.3, 1255.0], [67.4, 1255.0], [67.5, 1255.0], [67.6, 1255.0], [67.7, 1255.0], [67.8, 1255.0], [67.9, 1255.0], [68.0, 1255.0], [68.1, 1255.0], [68.2, 1255.0], [68.3, 1255.0], [68.4, 1255.0], [68.5, 1255.0], [68.6, 1255.0], [68.7, 1255.0], [68.8, 1255.0], [68.9, 1255.0], [69.0, 1255.0], [69.1, 1256.0], [69.2, 1256.0], [69.3, 1256.0], [69.4, 1256.0], [69.5, 1256.0], [69.6, 1256.0], [69.7, 1256.0], [69.8, 1256.0], [69.9, 1256.0], [70.0, 1256.0], [70.1, 1256.0], [70.2, 1256.0], [70.3, 1256.0], [70.4, 1256.0], [70.5, 1256.0], [70.6, 1256.0], [70.7, 1256.0], [70.8, 1256.0], [70.9, 1256.0], [71.0, 1256.0], [71.1, 1256.0], [71.2, 1256.0], [71.3, 1256.0], [71.4, 1256.0], [71.5, 1258.0], [71.6, 1258.0], [71.7, 1258.0], [71.8, 1258.0], [71.9, 1258.0], [72.0, 1258.0], [72.1, 1258.0], [72.2, 1258.0], [72.3, 1258.0], [72.4, 1258.0], [72.5, 1258.0], [72.6, 1258.0], [72.7, 1258.0], [72.8, 1258.0], [72.9, 1258.0], [73.0, 1258.0], [73.1, 1258.0], [73.2, 1258.0], [73.3, 1258.0], [73.4, 1258.0], [73.5, 1258.0], [73.6, 1258.0], [73.7, 1258.0], [73.8, 1258.0], [73.9, 1258.0], [74.0, 1258.0], [74.1, 1258.0], [74.2, 1258.0], [74.3, 1258.0], [74.4, 1258.0], [74.5, 1258.0], [74.6, 1258.0], [74.7, 1258.0], [74.8, 1258.0], [74.9, 1258.0], [75.0, 1258.0], [75.1, 1258.0], [75.2, 1258.0], [75.3, 1258.0], [75.4, 1258.0], [75.5, 1258.0], [75.6, 1258.0], [75.7, 1258.0], [75.8, 1258.0], [75.9, 1258.0], [76.0, 1258.0], [76.1, 1258.0], [76.2, 1259.0], [76.3, 1259.0], [76.4, 1259.0], [76.5, 1259.0], [76.6, 1259.0], [76.7, 1259.0], [76.8, 1259.0], [76.9, 1259.0], [77.0, 1259.0], [77.1, 1259.0], [77.2, 1259.0], [77.3, 1259.0], [77.4, 1259.0], [77.5, 1259.0], [77.6, 1259.0], [77.7, 1259.0], [77.8, 1259.0], [77.9, 1259.0], [78.0, 1259.0], [78.1, 1259.0], [78.2, 1259.0], [78.3, 1259.0], [78.4, 1259.0], [78.5, 1259.0], [78.6, 1259.0], [78.7, 1259.0], [78.8, 1259.0], [78.9, 1259.0], [79.0, 1259.0], [79.1, 1259.0], [79.2, 1259.0], [79.3, 1259.0], [79.4, 1259.0], [79.5, 1259.0], [79.6, 1259.0], [79.7, 1259.0], [79.8, 1259.0], [79.9, 1259.0], [80.0, 1259.0], [80.1, 1259.0], [80.2, 1259.0], [80.3, 1259.0], [80.4, 1259.0], [80.5, 1259.0], [80.6, 1259.0], [80.7, 1259.0], [80.8, 1259.0], [80.9, 1259.0], [81.0, 1260.0], [81.1, 1260.0], [81.2, 1260.0], [81.3, 1260.0], [81.4, 1260.0], [81.5, 1260.0], [81.6, 1260.0], [81.7, 1260.0], [81.8, 1260.0], [81.9, 1260.0], [82.0, 1260.0], [82.1, 1260.0], [82.2, 1260.0], [82.3, 1260.0], [82.4, 1260.0], [82.5, 1260.0], [82.6, 1260.0], [82.7, 1260.0], [82.8, 1260.0], [82.9, 1260.0], [83.0, 1260.0], [83.1, 1260.0], [83.2, 1260.0], [83.3, 1260.0], [83.4, 1261.0], [83.5, 1261.0], [83.6, 1261.0], [83.7, 1261.0], [83.8, 1261.0], [83.9, 1261.0], [84.0, 1261.0], [84.1, 1261.0], [84.2, 1261.0], [84.3, 1261.0], [84.4, 1261.0], [84.5, 1261.0], [84.6, 1261.0], [84.7, 1261.0], [84.8, 1261.0], [84.9, 1261.0], [85.0, 1261.0], [85.1, 1261.0], [85.2, 1261.0], [85.3, 1261.0], [85.4, 1261.0], [85.5, 1261.0], [85.6, 1261.0], [85.7, 1261.0], [85.8, 1261.0], [85.9, 1261.0], [86.0, 1261.0], [86.1, 1261.0], [86.2, 1261.0], [86.3, 1261.0], [86.4, 1261.0], [86.5, 1261.0], [86.6, 1261.0], [86.7, 1261.0], [86.8, 1261.0], [86.9, 1261.0], [87.0, 1261.0], [87.1, 1261.0], [87.2, 1261.0], [87.3, 1261.0], [87.4, 1261.0], [87.5, 1261.0], [87.6, 1261.0], [87.7, 1261.0], [87.8, 1261.0], [87.9, 1261.0], [88.0, 1261.0], [88.1, 1262.0], [88.2, 1262.0], [88.3, 1262.0], [88.4, 1262.0], [88.5, 1262.0], [88.6, 1262.0], [88.7, 1262.0], [88.8, 1262.0], [88.9, 1262.0], [89.0, 1262.0], [89.1, 1262.0], [89.2, 1262.0], [89.3, 1262.0], [89.4, 1262.0], [89.5, 1262.0], [89.6, 1262.0], [89.7, 1262.0], [89.8, 1262.0], [89.9, 1262.0], [90.0, 1262.0], [90.1, 1262.0], [90.2, 1262.0], [90.3, 1262.0], [90.4, 1262.0], [90.5, 1265.0], [90.6, 1265.0], [90.7, 1265.0], [90.8, 1265.0], [90.9, 1265.0], [91.0, 1265.0], [91.1, 1265.0], [91.2, 1265.0], [91.3, 1265.0], [91.4, 1265.0], [91.5, 1265.0], [91.6, 1265.0], [91.7, 1265.0], [91.8, 1265.0], [91.9, 1265.0], [92.0, 1265.0], [92.1, 1265.0], [92.2, 1265.0], [92.3, 1265.0], [92.4, 1265.0], [92.5, 1265.0], [92.6, 1265.0], [92.7, 1265.0], [92.8, 1265.0], [92.9, 1265.0], [93.0, 1265.0], [93.1, 1265.0], [93.2, 1265.0], [93.3, 1265.0], [93.4, 1265.0], [93.5, 1265.0], [93.6, 1265.0], [93.7, 1265.0], [93.8, 1265.0], [93.9, 1265.0], [94.0, 1265.0], [94.1, 1265.0], [94.2, 1265.0], [94.3, 1265.0], [94.4, 1265.0], [94.5, 1265.0], [94.6, 1265.0], [94.7, 1265.0], [94.8, 1265.0], [94.9, 1265.0], [95.0, 1265.0], [95.1, 1265.0], [95.2, 1265.0], [95.3, 1266.0], [95.4, 1266.0], [95.5, 1266.0], [95.6, 1266.0], [95.7, 1266.0], [95.8, 1266.0], [95.9, 1266.0], [96.0, 1266.0], [96.1, 1266.0], [96.2, 1266.0], [96.3, 1266.0], [96.4, 1266.0], [96.5, 1266.0], [96.6, 1266.0], [96.7, 1266.0], [96.8, 1266.0], [96.9, 1266.0], [97.0, 1266.0], [97.1, 1266.0], [97.2, 1266.0], [97.3, 1266.0], [97.4, 1266.0], [97.5, 1266.0], [97.6, 1266.0], [97.7, 1370.0], [97.8, 1370.0], [97.9, 1370.0], [98.0, 1370.0], [98.1, 1370.0], [98.2, 1370.0], [98.3, 1370.0], [98.4, 1370.0], [98.5, 1370.0], [98.6, 1370.0], [98.7, 1370.0], [98.8, 1370.0], [98.9, 1370.0], [99.0, 1370.0], [99.1, 1370.0], [99.2, 1370.0], [99.3, 1370.0], [99.4, 1370.0], [99.5, 1370.0], [99.6, 1370.0], [99.7, 1370.0], [99.8, 1370.0], [99.9, 1370.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 479.0], [0.1, 479.0], [0.2, 479.0], [0.3, 479.0], [0.4, 479.0], [0.5, 479.0], [0.6, 479.0], [0.7, 479.0], [0.8, 479.0], [0.9, 479.0], [1.0, 479.0], [1.1, 479.0], [1.2, 479.0], [1.3, 479.0], [1.4, 479.0], [1.5, 479.0], [1.6, 479.0], [1.7, 479.0], [1.8, 479.0], [1.9, 479.0], [2.0, 479.0], [2.1, 479.0], [2.2, 479.0], [2.3, 479.0], [2.4, 590.0], [2.5, 590.0], [2.6, 590.0], [2.7, 590.0], [2.8, 590.0], [2.9, 590.0], [3.0, 590.0], [3.1, 590.0], [3.2, 590.0], [3.3, 590.0], [3.4, 590.0], [3.5, 590.0], [3.6, 590.0], [3.7, 590.0], [3.8, 590.0], [3.9, 590.0], [4.0, 590.0], [4.1, 590.0], [4.2, 590.0], [4.3, 590.0], [4.4, 590.0], [4.5, 590.0], [4.6, 590.0], [4.7, 590.0], [4.8, 592.0], [4.9, 592.0], [5.0, 592.0], [5.1, 592.0], [5.2, 592.0], [5.3, 592.0], [5.4, 592.0], [5.5, 592.0], [5.6, 592.0], [5.7, 592.0], [5.8, 592.0], [5.9, 592.0], [6.0, 592.0], [6.1, 592.0], [6.2, 592.0], [6.3, 592.0], [6.4, 592.0], [6.5, 592.0], [6.6, 592.0], [6.7, 592.0], [6.8, 592.0], [6.9, 592.0], [7.0, 592.0], [7.1, 592.0], [7.2, 593.0], [7.3, 593.0], [7.4, 593.0], [7.5, 593.0], [7.6, 593.0], [7.7, 593.0], [7.8, 593.0], [7.9, 593.0], [8.0, 593.0], [8.1, 593.0], [8.2, 593.0], [8.3, 593.0], [8.4, 593.0], [8.5, 593.0], [8.6, 593.0], [8.7, 593.0], [8.8, 593.0], [8.9, 593.0], [9.0, 593.0], [9.1, 593.0], [9.2, 593.0], [9.3, 593.0], [9.4, 593.0], [9.5, 593.0], [9.6, 593.0], [9.7, 593.0], [9.8, 593.0], [9.9, 593.0], [10.0, 593.0], [10.1, 593.0], [10.2, 593.0], [10.3, 593.0], [10.4, 593.0], [10.5, 593.0], [10.6, 593.0], [10.7, 593.0], [10.8, 593.0], [10.9, 593.0], [11.0, 593.0], [11.1, 593.0], [11.2, 593.0], [11.3, 593.0], [11.4, 593.0], [11.5, 593.0], [11.6, 593.0], [11.7, 593.0], [11.8, 593.0], [11.9, 593.0], [12.0, 593.0], [12.1, 593.0], [12.2, 593.0], [12.3, 593.0], [12.4, 593.0], [12.5, 593.0], [12.6, 593.0], [12.7, 593.0], [12.8, 593.0], [12.9, 593.0], [13.0, 593.0], [13.1, 593.0], [13.2, 593.0], [13.3, 593.0], [13.4, 593.0], [13.5, 593.0], [13.6, 593.0], [13.7, 593.0], [13.8, 593.0], [13.9, 593.0], [14.0, 593.0], [14.1, 593.0], [14.2, 593.0], [14.3, 595.0], [14.4, 595.0], [14.5, 595.0], [14.6, 595.0], [14.7, 595.0], [14.8, 595.0], [14.9, 595.0], [15.0, 595.0], [15.1, 595.0], [15.2, 595.0], [15.3, 595.0], [15.4, 595.0], [15.5, 595.0], [15.6, 595.0], [15.7, 595.0], [15.8, 595.0], [15.9, 595.0], [16.0, 595.0], [16.1, 595.0], [16.2, 595.0], [16.3, 595.0], [16.4, 595.0], [16.5, 595.0], [16.6, 595.0], [16.7, 595.0], [16.8, 595.0], [16.9, 595.0], [17.0, 595.0], [17.1, 595.0], [17.2, 595.0], [17.3, 595.0], [17.4, 595.0], [17.5, 595.0], [17.6, 595.0], [17.7, 595.0], [17.8, 595.0], [17.9, 595.0], [18.0, 595.0], [18.1, 595.0], [18.2, 595.0], [18.3, 595.0], [18.4, 595.0], [18.5, 595.0], [18.6, 595.0], [18.7, 595.0], [18.8, 595.0], [18.9, 595.0], [19.0, 595.0], [19.1, 596.0], [19.2, 596.0], [19.3, 596.0], [19.4, 596.0], [19.5, 596.0], [19.6, 596.0], [19.7, 596.0], [19.8, 596.0], [19.9, 596.0], [20.0, 596.0], [20.1, 596.0], [20.2, 596.0], [20.3, 596.0], [20.4, 596.0], [20.5, 596.0], [20.6, 596.0], [20.7, 596.0], [20.8, 596.0], [20.9, 596.0], [21.0, 596.0], [21.1, 596.0], [21.2, 596.0], [21.3, 596.0], [21.4, 596.0], [21.5, 597.0], [21.6, 597.0], [21.7, 597.0], [21.8, 597.0], [21.9, 597.0], [22.0, 597.0], [22.1, 597.0], [22.2, 597.0], [22.3, 597.0], [22.4, 597.0], [22.5, 597.0], [22.6, 597.0], [22.7, 597.0], [22.8, 597.0], [22.9, 597.0], [23.0, 597.0], [23.1, 597.0], [23.2, 597.0], [23.3, 597.0], [23.4, 597.0], [23.5, 597.0], [23.6, 597.0], [23.7, 597.0], [23.8, 597.0], [23.9, 597.0], [24.0, 597.0], [24.1, 597.0], [24.2, 597.0], [24.3, 597.0], [24.4, 597.0], [24.5, 597.0], [24.6, 597.0], [24.7, 597.0], [24.8, 597.0], [24.9, 597.0], [25.0, 597.0], [25.1, 597.0], [25.2, 597.0], [25.3, 597.0], [25.4, 597.0], [25.5, 597.0], [25.6, 597.0], [25.7, 597.0], [25.8, 597.0], [25.9, 597.0], [26.0, 597.0], [26.1, 597.0], [26.2, 598.0], [26.3, 598.0], [26.4, 598.0], [26.5, 598.0], [26.6, 598.0], [26.7, 598.0], [26.8, 598.0], [26.9, 598.0], [27.0, 598.0], [27.1, 598.0], [27.2, 598.0], [27.3, 598.0], [27.4, 598.0], [27.5, 598.0], [27.6, 598.0], [27.7, 598.0], [27.8, 598.0], [27.9, 598.0], [28.0, 598.0], [28.1, 598.0], [28.2, 598.0], [28.3, 598.0], [28.4, 598.0], [28.5, 598.0], [28.6, 600.0], [28.7, 600.0], [28.8, 600.0], [28.9, 600.0], [29.0, 600.0], [29.1, 600.0], [29.2, 600.0], [29.3, 600.0], [29.4, 600.0], [29.5, 600.0], [29.6, 600.0], [29.7, 600.0], [29.8, 600.0], [29.9, 600.0], [30.0, 600.0], [30.1, 600.0], [30.2, 600.0], [30.3, 600.0], [30.4, 600.0], [30.5, 600.0], [30.6, 600.0], [30.7, 600.0], [30.8, 600.0], [30.9, 600.0], [31.0, 601.0], [31.1, 601.0], [31.2, 601.0], [31.3, 601.0], [31.4, 601.0], [31.5, 601.0], [31.6, 601.0], [31.7, 601.0], [31.8, 601.0], [31.9, 601.0], [32.0, 601.0], [32.1, 601.0], [32.2, 601.0], [32.3, 601.0], [32.4, 601.0], [32.5, 601.0], [32.6, 601.0], [32.7, 601.0], [32.8, 601.0], [32.9, 601.0], [33.0, 601.0], [33.1, 601.0], [33.2, 601.0], [33.3, 601.0], [33.4, 602.0], [33.5, 602.0], [33.6, 602.0], [33.7, 602.0], [33.8, 602.0], [33.9, 602.0], [34.0, 602.0], [34.1, 602.0], [34.2, 602.0], [34.3, 602.0], [34.4, 602.0], [34.5, 602.0], [34.6, 602.0], [34.7, 602.0], [34.8, 602.0], [34.9, 602.0], [35.0, 602.0], [35.1, 602.0], [35.2, 602.0], [35.3, 602.0], [35.4, 602.0], [35.5, 602.0], [35.6, 602.0], [35.7, 602.0], [35.8, 603.0], [35.9, 603.0], [36.0, 603.0], [36.1, 603.0], [36.2, 603.0], [36.3, 603.0], [36.4, 603.0], [36.5, 603.0], [36.6, 603.0], [36.7, 603.0], [36.8, 603.0], [36.9, 603.0], [37.0, 603.0], [37.1, 603.0], [37.2, 603.0], [37.3, 603.0], [37.4, 603.0], [37.5, 603.0], [37.6, 603.0], [37.7, 603.0], [37.8, 603.0], [37.9, 603.0], [38.0, 603.0], [38.1, 603.0], [38.2, 603.0], [38.3, 603.0], [38.4, 603.0], [38.5, 603.0], [38.6, 603.0], [38.7, 603.0], [38.8, 603.0], [38.9, 603.0], [39.0, 603.0], [39.1, 603.0], [39.2, 603.0], [39.3, 603.0], [39.4, 603.0], [39.5, 603.0], [39.6, 603.0], [39.7, 603.0], [39.8, 603.0], [39.9, 603.0], [40.0, 603.0], [40.1, 603.0], [40.2, 603.0], [40.3, 603.0], [40.4, 603.0], [40.5, 605.0], [40.6, 605.0], [40.7, 605.0], [40.8, 605.0], [40.9, 605.0], [41.0, 605.0], [41.1, 605.0], [41.2, 605.0], [41.3, 605.0], [41.4, 605.0], [41.5, 605.0], [41.6, 605.0], [41.7, 605.0], [41.8, 605.0], [41.9, 605.0], [42.0, 605.0], [42.1, 605.0], [42.2, 605.0], [42.3, 605.0], [42.4, 605.0], [42.5, 605.0], [42.6, 605.0], [42.7, 605.0], [42.8, 605.0], [42.9, 606.0], [43.0, 606.0], [43.1, 606.0], [43.2, 606.0], [43.3, 606.0], [43.4, 606.0], [43.5, 606.0], [43.6, 606.0], [43.7, 606.0], [43.8, 606.0], [43.9, 606.0], [44.0, 606.0], [44.1, 606.0], [44.2, 606.0], [44.3, 606.0], [44.4, 606.0], [44.5, 606.0], [44.6, 606.0], [44.7, 606.0], [44.8, 606.0], [44.9, 606.0], [45.0, 606.0], [45.1, 606.0], [45.2, 606.0], [45.3, 607.0], [45.4, 607.0], [45.5, 607.0], [45.6, 607.0], [45.7, 607.0], [45.8, 607.0], [45.9, 607.0], [46.0, 607.0], [46.1, 607.0], [46.2, 607.0], [46.3, 607.0], [46.4, 607.0], [46.5, 607.0], [46.6, 607.0], [46.7, 607.0], [46.8, 607.0], [46.9, 607.0], [47.0, 607.0], [47.1, 607.0], [47.2, 607.0], [47.3, 607.0], [47.4, 607.0], [47.5, 607.0], [47.6, 607.0], [47.7, 607.0], [47.8, 607.0], [47.9, 607.0], [48.0, 607.0], [48.1, 607.0], [48.2, 607.0], [48.3, 607.0], [48.4, 607.0], [48.5, 607.0], [48.6, 607.0], [48.7, 607.0], [48.8, 607.0], [48.9, 607.0], [49.0, 607.0], [49.1, 607.0], [49.2, 607.0], [49.3, 607.0], [49.4, 607.0], [49.5, 607.0], [49.6, 607.0], [49.7, 607.0], [49.8, 607.0], [49.9, 607.0], [50.0, 607.0], [50.1, 607.0], [50.2, 607.0], [50.3, 607.0], [50.4, 607.0], [50.5, 607.0], [50.6, 607.0], [50.7, 607.0], [50.8, 607.0], [50.9, 607.0], [51.0, 607.0], [51.1, 607.0], [51.2, 607.0], [51.3, 607.0], [51.4, 607.0], [51.5, 607.0], [51.6, 607.0], [51.7, 607.0], [51.8, 607.0], [51.9, 607.0], [52.0, 607.0], [52.1, 607.0], [52.2, 607.0], [52.3, 607.0], [52.4, 607.0], [52.5, 607.0], [52.6, 607.0], [52.7, 607.0], [52.8, 607.0], [52.9, 607.0], [53.0, 607.0], [53.1, 607.0], [53.2, 607.0], [53.3, 607.0], [53.4, 607.0], [53.5, 607.0], [53.6, 607.0], [53.7, 607.0], [53.8, 607.0], [53.9, 607.0], [54.0, 607.0], [54.1, 607.0], [54.2, 607.0], [54.3, 607.0], [54.4, 607.0], [54.5, 607.0], [54.6, 607.0], [54.7, 607.0], [54.8, 607.0], [54.9, 607.0], [55.0, 607.0], [55.1, 607.0], [55.2, 607.0], [55.3, 607.0], [55.4, 607.0], [55.5, 607.0], [55.6, 607.0], [55.7, 607.0], [55.8, 607.0], [55.9, 607.0], [56.0, 607.0], [56.1, 607.0], [56.2, 607.0], [56.3, 607.0], [56.4, 607.0], [56.5, 607.0], [56.6, 607.0], [56.7, 607.0], [56.8, 607.0], [56.9, 607.0], [57.0, 607.0], [57.1, 607.0], [57.2, 617.0], [57.3, 617.0], [57.4, 617.0], [57.5, 617.0], [57.6, 617.0], [57.7, 617.0], [57.8, 617.0], [57.9, 617.0], [58.0, 617.0], [58.1, 617.0], [58.2, 617.0], [58.3, 617.0], [58.4, 617.0], [58.5, 617.0], [58.6, 617.0], [58.7, 617.0], [58.8, 617.0], [58.9, 617.0], [59.0, 617.0], [59.1, 617.0], [59.2, 617.0], [59.3, 617.0], [59.4, 617.0], [59.5, 617.0], [59.6, 617.0], [59.7, 617.0], [59.8, 617.0], [59.9, 617.0], [60.0, 617.0], [60.1, 617.0], [60.2, 617.0], [60.3, 617.0], [60.4, 617.0], [60.5, 617.0], [60.6, 617.0], [60.7, 617.0], [60.8, 617.0], [60.9, 617.0], [61.0, 617.0], [61.1, 617.0], [61.2, 617.0], [61.3, 617.0], [61.4, 617.0], [61.5, 617.0], [61.6, 617.0], [61.7, 617.0], [61.8, 617.0], [61.9, 617.0], [62.0, 619.0], [62.1, 619.0], [62.2, 619.0], [62.3, 619.0], [62.4, 619.0], [62.5, 619.0], [62.6, 619.0], [62.7, 619.0], [62.8, 619.0], [62.9, 619.0], [63.0, 619.0], [63.1, 619.0], [63.2, 619.0], [63.3, 619.0], [63.4, 619.0], [63.5, 619.0], [63.6, 619.0], [63.7, 619.0], [63.8, 619.0], [63.9, 619.0], [64.0, 619.0], [64.1, 619.0], [64.2, 619.0], [64.3, 619.0], [64.4, 619.0], [64.5, 619.0], [64.6, 619.0], [64.7, 619.0], [64.8, 619.0], [64.9, 619.0], [65.0, 619.0], [65.1, 619.0], [65.2, 619.0], [65.3, 619.0], [65.4, 619.0], [65.5, 619.0], [65.6, 619.0], [65.7, 619.0], [65.8, 619.0], [65.9, 619.0], [66.0, 619.0], [66.1, 619.0], [66.2, 619.0], [66.3, 619.0], [66.4, 619.0], [66.5, 619.0], [66.6, 619.0], [66.7, 619.0], [66.8, 619.0], [66.9, 619.0], [67.0, 619.0], [67.1, 619.0], [67.2, 619.0], [67.3, 619.0], [67.4, 619.0], [67.5, 619.0], [67.6, 619.0], [67.7, 619.0], [67.8, 619.0], [67.9, 619.0], [68.0, 619.0], [68.1, 619.0], [68.2, 619.0], [68.3, 619.0], [68.4, 619.0], [68.5, 619.0], [68.6, 619.0], [68.7, 619.0], [68.8, 619.0], [68.9, 619.0], [69.0, 619.0], [69.1, 621.0], [69.2, 621.0], [69.3, 621.0], [69.4, 621.0], [69.5, 621.0], [69.6, 621.0], [69.7, 621.0], [69.8, 621.0], [69.9, 621.0], [70.0, 621.0], [70.1, 621.0], [70.2, 621.0], [70.3, 621.0], [70.4, 621.0], [70.5, 621.0], [70.6, 621.0], [70.7, 621.0], [70.8, 621.0], [70.9, 621.0], [71.0, 621.0], [71.1, 621.0], [71.2, 621.0], [71.3, 621.0], [71.4, 621.0], [71.5, 622.0], [71.6, 622.0], [71.7, 622.0], [71.8, 622.0], [71.9, 622.0], [72.0, 622.0], [72.1, 622.0], [72.2, 622.0], [72.3, 622.0], [72.4, 622.0], [72.5, 622.0], [72.6, 622.0], [72.7, 622.0], [72.8, 622.0], [72.9, 622.0], [73.0, 622.0], [73.1, 622.0], [73.2, 622.0], [73.3, 622.0], [73.4, 622.0], [73.5, 622.0], [73.6, 622.0], [73.7, 622.0], [73.8, 622.0], [73.9, 623.0], [74.0, 623.0], [74.1, 623.0], [74.2, 623.0], [74.3, 623.0], [74.4, 623.0], [74.5, 623.0], [74.6, 623.0], [74.7, 623.0], [74.8, 623.0], [74.9, 623.0], [75.0, 623.0], [75.1, 623.0], [75.2, 623.0], [75.3, 623.0], [75.4, 623.0], [75.5, 623.0], [75.6, 623.0], [75.7, 623.0], [75.8, 623.0], [75.9, 623.0], [76.0, 623.0], [76.1, 623.0], [76.2, 624.0], [76.3, 624.0], [76.4, 624.0], [76.5, 624.0], [76.6, 624.0], [76.7, 624.0], [76.8, 624.0], [76.9, 624.0], [77.0, 624.0], [77.1, 624.0], [77.2, 624.0], [77.3, 624.0], [77.4, 624.0], [77.5, 624.0], [77.6, 624.0], [77.7, 624.0], [77.8, 624.0], [77.9, 624.0], [78.0, 624.0], [78.1, 624.0], [78.2, 624.0], [78.3, 624.0], [78.4, 624.0], [78.5, 624.0], [78.6, 626.0], [78.7, 626.0], [78.8, 626.0], [78.9, 626.0], [79.0, 626.0], [79.1, 626.0], [79.2, 626.0], [79.3, 626.0], [79.4, 626.0], [79.5, 626.0], [79.6, 626.0], [79.7, 626.0], [79.8, 626.0], [79.9, 626.0], [80.0, 626.0], [80.1, 626.0], [80.2, 626.0], [80.3, 626.0], [80.4, 626.0], [80.5, 626.0], [80.6, 626.0], [80.7, 626.0], [80.8, 626.0], [80.9, 626.0], [81.0, 626.0], [81.1, 626.0], [81.2, 626.0], [81.3, 626.0], [81.4, 626.0], [81.5, 626.0], [81.6, 626.0], [81.7, 626.0], [81.8, 626.0], [81.9, 626.0], [82.0, 626.0], [82.1, 626.0], [82.2, 626.0], [82.3, 626.0], [82.4, 626.0], [82.5, 626.0], [82.6, 626.0], [82.7, 626.0], [82.8, 626.0], [82.9, 626.0], [83.0, 626.0], [83.1, 626.0], [83.2, 626.0], [83.3, 626.0], [83.4, 626.0], [83.5, 626.0], [83.6, 626.0], [83.7, 626.0], [83.8, 626.0], [83.9, 626.0], [84.0, 626.0], [84.1, 626.0], [84.2, 626.0], [84.3, 626.0], [84.4, 626.0], [84.5, 626.0], [84.6, 626.0], [84.7, 626.0], [84.8, 626.0], [84.9, 626.0], [85.0, 626.0], [85.1, 626.0], [85.2, 626.0], [85.3, 626.0], [85.4, 626.0], [85.5, 626.0], [85.6, 626.0], [85.7, 626.0], [85.8, 631.0], [85.9, 631.0], [86.0, 631.0], [86.1, 631.0], [86.2, 631.0], [86.3, 631.0], [86.4, 631.0], [86.5, 631.0], [86.6, 631.0], [86.7, 631.0], [86.8, 631.0], [86.9, 631.0], [87.0, 631.0], [87.1, 631.0], [87.2, 631.0], [87.3, 631.0], [87.4, 631.0], [87.5, 631.0], [87.6, 631.0], [87.7, 631.0], [87.8, 631.0], [87.9, 631.0], [88.0, 631.0], [88.1, 632.0], [88.2, 632.0], [88.3, 632.0], [88.4, 632.0], [88.5, 632.0], [88.6, 632.0], [88.7, 632.0], [88.8, 632.0], [88.9, 632.0], [89.0, 632.0], [89.1, 632.0], [89.2, 632.0], [89.3, 632.0], [89.4, 632.0], [89.5, 632.0], [89.6, 632.0], [89.7, 632.0], [89.8, 632.0], [89.9, 632.0], [90.0, 632.0], [90.1, 632.0], [90.2, 632.0], [90.3, 632.0], [90.4, 632.0], [90.5, 634.0], [90.6, 634.0], [90.7, 634.0], [90.8, 634.0], [90.9, 634.0], [91.0, 634.0], [91.1, 634.0], [91.2, 634.0], [91.3, 634.0], [91.4, 634.0], [91.5, 634.0], [91.6, 634.0], [91.7, 634.0], [91.8, 634.0], [91.9, 634.0], [92.0, 634.0], [92.1, 634.0], [92.2, 634.0], [92.3, 634.0], [92.4, 634.0], [92.5, 634.0], [92.6, 634.0], [92.7, 634.0], [92.8, 634.0], [92.9, 634.0], [93.0, 634.0], [93.1, 634.0], [93.2, 634.0], [93.3, 634.0], [93.4, 634.0], [93.5, 634.0], [93.6, 634.0], [93.7, 634.0], [93.8, 634.0], [93.9, 634.0], [94.0, 634.0], [94.1, 634.0], [94.2, 634.0], [94.3, 634.0], [94.4, 634.0], [94.5, 634.0], [94.6, 634.0], [94.7, 634.0], [94.8, 634.0], [94.9, 634.0], [95.0, 634.0], [95.1, 634.0], [95.2, 634.0], [95.3, 3075.0], [95.4, 3075.0], [95.5, 3075.0], [95.6, 3075.0], [95.7, 3075.0], [95.8, 3075.0], [95.9, 3075.0], [96.0, 3075.0], [96.1, 3075.0], [96.2, 3075.0], [96.3, 3075.0], [96.4, 3075.0], [96.5, 3075.0], [96.6, 3075.0], [96.7, 3075.0], [96.8, 3075.0], [96.9, 3075.0], [97.0, 3075.0], [97.1, 3075.0], [97.2, 3075.0], [97.3, 3075.0], [97.4, 3075.0], [97.5, 3075.0], [97.6, 3075.0], [97.7, 3086.0], [97.8, 3086.0], [97.9, 3086.0], [98.0, 3086.0], [98.1, 3086.0], [98.2, 3086.0], [98.3, 3086.0], [98.4, 3086.0], [98.5, 3086.0], [98.6, 3086.0], [98.7, 3086.0], [98.8, 3086.0], [98.9, 3086.0], [99.0, 3086.0], [99.1, 3086.0], [99.2, 3086.0], [99.3, 3086.0], [99.4, 3086.0], [99.5, 3086.0], [99.6, 3086.0], [99.7, 3086.0], [99.8, 3086.0], [99.9, 3086.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 53.0], [0.1, 53.0], [0.2, 54.0], [0.3, 54.0], [0.4, 54.0], [0.5, 55.0], [0.6, 55.0], [0.7, 55.0], [0.8, 55.0], [0.9, 55.0], [1.0, 56.0], [1.1, 56.0], [1.2, 56.0], [1.3, 56.0], [1.4, 57.0], [1.5, 57.0], [1.6, 57.0], [1.7, 58.0], [1.8, 58.0], [1.9, 58.0], [2.0, 59.0], [2.1, 59.0], [2.2, 59.0], [2.3, 60.0], [2.4, 60.0], [2.5, 60.0], [2.6, 60.0], [2.7, 60.0], [2.8, 60.0], [2.9, 60.0], [3.0, 60.0], [3.1, 61.0], [3.2, 61.0], [3.3, 61.0], [3.4, 61.0], [3.5, 61.0], [3.6, 61.0], [3.7, 61.0], [3.8, 61.0], [3.9, 61.0], [4.0, 62.0], [4.1, 62.0], [4.2, 62.0], [4.3, 62.0], [4.4, 62.0], [4.5, 62.0], [4.6, 62.0], [4.7, 62.0], [4.8, 62.0], [4.9, 62.0], [5.0, 62.0], [5.1, 62.0], [5.2, 62.0], [5.3, 62.0], [5.4, 63.0], [5.5, 63.0], [5.6, 63.0], [5.7, 63.0], [5.8, 63.0], [5.9, 63.0], [6.0, 63.0], [6.1, 63.0], [6.2, 63.0], [6.3, 63.0], [6.4, 63.0], [6.5, 63.0], [6.6, 63.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 63.0], [7.1, 63.0], [7.2, 64.0], [7.3, 64.0], [7.4, 64.0], [7.5, 64.0], [7.6, 64.0], [7.7, 64.0], [7.8, 64.0], [7.9, 64.0], [8.0, 64.0], [8.1, 64.0], [8.2, 64.0], [8.3, 64.0], [8.4, 64.0], [8.5, 64.0], [8.6, 64.0], [8.7, 65.0], [8.8, 65.0], [8.9, 65.0], [9.0, 65.0], [9.1, 65.0], [9.2, 65.0], [9.3, 65.0], [9.4, 65.0], [9.5, 65.0], [9.6, 65.0], [9.7, 65.0], [9.8, 65.0], [9.9, 65.0], [10.0, 65.0], [10.1, 65.0], [10.2, 66.0], [10.3, 66.0], [10.4, 66.0], [10.5, 66.0], [10.6, 66.0], [10.7, 66.0], [10.8, 66.0], [10.9, 66.0], [11.0, 66.0], [11.1, 66.0], [11.2, 66.0], [11.3, 66.0], [11.4, 66.0], [11.5, 66.0], [11.6, 66.0], [11.7, 67.0], [11.8, 67.0], [11.9, 67.0], [12.0, 67.0], [12.1, 67.0], [12.2, 67.0], [12.3, 67.0], [12.4, 67.0], [12.5, 67.0], [12.6, 67.0], [12.7, 67.0], [12.8, 67.0], [12.9, 68.0], [13.0, 68.0], [13.1, 68.0], [13.2, 68.0], [13.3, 68.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 68.0], [13.8, 68.0], [13.9, 68.0], [14.0, 68.0], [14.1, 68.0], [14.2, 69.0], [14.3, 69.0], [14.4, 69.0], [14.5, 69.0], [14.6, 69.0], [14.7, 69.0], [14.8, 69.0], [14.9, 69.0], [15.0, 69.0], [15.1, 69.0], [15.2, 69.0], [15.3, 69.0], [15.4, 69.0], [15.5, 70.0], [15.6, 70.0], [15.7, 70.0], [15.8, 70.0], [15.9, 70.0], [16.0, 70.0], [16.1, 70.0], [16.2, 70.0], [16.3, 70.0], [16.4, 70.0], [16.5, 70.0], [16.6, 70.0], [16.7, 70.0], [16.8, 70.0], [16.9, 70.0], [17.0, 70.0], [17.1, 70.0], [17.2, 70.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 71.0], [17.9, 71.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 71.0], [18.4, 71.0], [18.5, 71.0], [18.6, 71.0], [18.7, 71.0], [18.8, 71.0], [18.9, 71.0], [19.0, 71.0], [19.1, 71.0], [19.2, 72.0], [19.3, 72.0], [19.4, 72.0], [19.5, 72.0], [19.6, 72.0], [19.7, 72.0], [19.8, 72.0], [19.9, 72.0], [20.0, 72.0], [20.1, 72.0], [20.2, 72.0], [20.3, 72.0], [20.4, 72.0], [20.5, 72.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 73.0], [21.3, 73.0], [21.4, 73.0], [21.5, 73.0], [21.6, 73.0], [21.7, 73.0], [21.8, 73.0], [21.9, 73.0], [22.0, 73.0], [22.1, 73.0], [22.2, 73.0], [22.3, 73.0], [22.4, 73.0], [22.5, 73.0], [22.6, 73.0], [22.7, 73.0], [22.8, 73.0], [22.9, 73.0], [23.0, 73.0], [23.1, 73.0], [23.2, 74.0], [23.3, 74.0], [23.4, 74.0], [23.5, 74.0], [23.6, 74.0], [23.7, 74.0], [23.8, 74.0], [23.9, 74.0], [24.0, 74.0], [24.1, 74.0], [24.2, 74.0], [24.3, 74.0], [24.4, 74.0], [24.5, 74.0], [24.6, 74.0], [24.7, 74.0], [24.8, 75.0], [24.9, 75.0], [25.0, 75.0], [25.1, 75.0], [25.2, 75.0], [25.3, 75.0], [25.4, 75.0], [25.5, 75.0], [25.6, 75.0], [25.7, 75.0], [25.8, 75.0], [25.9, 75.0], [26.0, 75.0], [26.1, 75.0], [26.2, 75.0], [26.3, 75.0], [26.4, 76.0], [26.5, 76.0], [26.6, 76.0], [26.7, 76.0], [26.8, 76.0], [26.9, 76.0], [27.0, 76.0], [27.1, 76.0], [27.2, 76.0], [27.3, 76.0], [27.4, 77.0], [27.5, 77.0], [27.6, 77.0], [27.7, 77.0], [27.8, 77.0], [27.9, 77.0], [28.0, 77.0], [28.1, 77.0], [28.2, 77.0], [28.3, 77.0], [28.4, 77.0], [28.5, 78.0], [28.6, 78.0], [28.7, 78.0], [28.8, 78.0], [28.9, 78.0], [29.0, 78.0], [29.1, 78.0], [29.2, 79.0], [29.3, 79.0], [29.4, 79.0], [29.5, 79.0], [29.6, 79.0], [29.7, 79.0], [29.8, 79.0], [29.9, 79.0], [30.0, 80.0], [30.1, 80.0], [30.2, 80.0], [30.3, 80.0], [30.4, 80.0], [30.5, 80.0], [30.6, 80.0], [30.7, 80.0], [30.8, 81.0], [30.9, 81.0], [31.0, 81.0], [31.1, 81.0], [31.2, 81.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 82.0], [31.7, 82.0], [31.8, 82.0], [31.9, 82.0], [32.0, 83.0], [32.1, 83.0], [32.2, 83.0], [32.3, 83.0], [32.4, 84.0], [32.5, 84.0], [32.6, 84.0], [32.7, 85.0], [32.8, 85.0], [32.9, 85.0], [33.0, 85.0], [33.1, 85.0], [33.2, 85.0], [33.3, 86.0], [33.4, 86.0], [33.5, 86.0], [33.6, 86.0], [33.7, 86.0], [33.8, 87.0], [33.9, 87.0], [34.0, 87.0], [34.1, 87.0], [34.2, 88.0], [34.3, 88.0], [34.4, 88.0], [34.5, 88.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 89.0], [35.0, 90.0], [35.1, 90.0], [35.2, 90.0], [35.3, 90.0], [35.4, 91.0], [35.5, 91.0], [35.6, 91.0], [35.7, 91.0], [35.8, 92.0], [35.9, 92.0], [36.0, 92.0], [36.1, 92.0], [36.2, 92.0], [36.3, 93.0], [36.4, 93.0], [36.5, 93.0], [36.6, 94.0], [36.7, 94.0], [36.8, 94.0], [36.9, 94.0], [37.0, 95.0], [37.1, 95.0], [37.2, 95.0], [37.3, 96.0], [37.4, 96.0], [37.5, 96.0], [37.6, 97.0], [37.7, 97.0], [37.8, 97.0], [37.9, 98.0], [38.0, 98.0], [38.1, 98.0], [38.2, 98.0], [38.3, 99.0], [38.4, 99.0], [38.5, 100.0], [38.6, 100.0], [38.7, 100.0], [38.8, 101.0], [38.9, 101.0], [39.0, 102.0], [39.1, 102.0], [39.2, 103.0], [39.3, 103.0], [39.4, 103.0], [39.5, 104.0], [39.6, 104.0], [39.7, 104.0], [39.8, 105.0], [39.9, 106.0], [40.0, 106.0], [40.1, 107.0], [40.2, 107.0], [40.3, 108.0], [40.4, 108.0], [40.5, 109.0], [40.6, 110.0], [40.7, 111.0], [40.8, 111.0], [40.9, 112.0], [41.0, 112.0], [41.1, 113.0], [41.2, 113.0], [41.3, 113.0], [41.4, 114.0], [41.5, 115.0], [41.6, 115.0], [41.7, 115.0], [41.8, 116.0], [41.9, 116.0], [42.0, 117.0], [42.1, 117.0], [42.2, 118.0], [42.3, 118.0], [42.4, 119.0], [42.5, 119.0], [42.6, 119.0], [42.7, 120.0], [42.8, 120.0], [42.9, 121.0], [43.0, 121.0], [43.1, 121.0], [43.2, 122.0], [43.3, 122.0], [43.4, 123.0], [43.5, 123.0], [43.6, 123.0], [43.7, 124.0], [43.8, 124.0], [43.9, 124.0], [44.0, 124.0], [44.1, 125.0], [44.2, 125.0], [44.3, 125.0], [44.4, 126.0], [44.5, 126.0], [44.6, 126.0], [44.7, 127.0], [44.8, 127.0], [44.9, 127.0], [45.0, 128.0], [45.1, 128.0], [45.2, 128.0], [45.3, 129.0], [45.4, 129.0], [45.5, 129.0], [45.6, 130.0], [45.7, 130.0], [45.8, 130.0], [45.9, 131.0], [46.0, 131.0], [46.1, 131.0], [46.2, 132.0], [46.3, 132.0], [46.4, 132.0], [46.5, 133.0], [46.6, 133.0], [46.7, 133.0], [46.8, 133.0], [46.9, 133.0], [47.0, 134.0], [47.1, 134.0], [47.2, 135.0], [47.3, 135.0], [47.4, 135.0], [47.5, 135.0], [47.6, 136.0], [47.7, 136.0], [47.8, 136.0], [47.9, 136.0], [48.0, 136.0], [48.1, 137.0], [48.2, 137.0], [48.3, 137.0], [48.4, 137.0], [48.5, 138.0], [48.6, 138.0], [48.7, 138.0], [48.8, 138.0], [48.9, 138.0], [49.0, 139.0], [49.1, 139.0], [49.2, 139.0], [49.3, 139.0], [49.4, 140.0], [49.5, 140.0], [49.6, 140.0], [49.7, 140.0], [49.8, 141.0], [49.9, 141.0], [50.0, 141.0], [50.1, 141.0], [50.2, 142.0], [50.3, 142.0], [50.4, 142.0], [50.5, 143.0], [50.6, 143.0], [50.7, 143.0], [50.8, 143.0], [50.9, 143.0], [51.0, 144.0], [51.1, 144.0], [51.2, 144.0], [51.3, 145.0], [51.4, 145.0], [51.5, 146.0], [51.6, 146.0], [51.7, 146.0], [51.8, 146.0], [51.9, 147.0], [52.0, 147.0], [52.1, 147.0], [52.2, 148.0], [52.3, 148.0], [52.4, 148.0], [52.5, 149.0], [52.6, 149.0], [52.7, 149.0], [52.8, 149.0], [52.9, 150.0], [53.0, 150.0], [53.1, 150.0], [53.2, 150.0], [53.3, 151.0], [53.4, 151.0], [53.5, 151.0], [53.6, 152.0], [53.7, 152.0], [53.8, 152.0], [53.9, 152.0], [54.0, 153.0], [54.1, 153.0], [54.2, 153.0], [54.3, 153.0], [54.4, 154.0], [54.5, 154.0], [54.6, 154.0], [54.7, 155.0], [54.8, 155.0], [54.9, 155.0], [55.0, 155.0], [55.1, 156.0], [55.2, 156.0], [55.3, 156.0], [55.4, 156.0], [55.5, 157.0], [55.6, 157.0], [55.7, 157.0], [55.8, 157.0], [55.9, 158.0], [56.0, 158.0], [56.1, 158.0], [56.2, 158.0], [56.3, 159.0], [56.4, 159.0], [56.5, 159.0], [56.6, 159.0], [56.7, 160.0], [56.8, 160.0], [56.9, 160.0], [57.0, 161.0], [57.1, 161.0], [57.2, 161.0], [57.3, 161.0], [57.4, 161.0], [57.5, 162.0], [57.6, 162.0], [57.7, 162.0], [57.8, 162.0], [57.9, 163.0], [58.0, 163.0], [58.1, 163.0], [58.2, 164.0], [58.3, 164.0], [58.4, 164.0], [58.5, 165.0], [58.6, 165.0], [58.7, 165.0], [58.8, 166.0], [58.9, 166.0], [59.0, 167.0], [59.1, 167.0], [59.2, 167.0], [59.3, 168.0], [59.4, 168.0], [59.5, 168.0], [59.6, 169.0], [59.7, 169.0], [59.8, 169.0], [59.9, 169.0], [60.0, 170.0], [60.1, 170.0], [60.2, 170.0], [60.3, 171.0], [60.4, 171.0], [60.5, 171.0], [60.6, 172.0], [60.7, 172.0], [60.8, 172.0], [60.9, 173.0], [61.0, 173.0], [61.1, 174.0], [61.2, 174.0], [61.3, 174.0], [61.4, 175.0], [61.5, 175.0], [61.6, 175.0], [61.7, 176.0], [61.8, 176.0], [61.9, 177.0], [62.0, 177.0], [62.1, 178.0], [62.2, 178.0], [62.3, 179.0], [62.4, 179.0], [62.5, 179.0], [62.6, 180.0], [62.7, 180.0], [62.8, 181.0], [62.9, 181.0], [63.0, 181.0], [63.1, 182.0], [63.2, 182.0], [63.3, 183.0], [63.4, 183.0], [63.5, 184.0], [63.6, 184.0], [63.7, 185.0], [63.8, 185.0], [63.9, 186.0], [64.0, 186.0], [64.1, 186.0], [64.2, 187.0], [64.3, 187.0], [64.4, 187.0], [64.5, 188.0], [64.6, 188.0], [64.7, 188.0], [64.8, 189.0], [64.9, 190.0], [65.0, 190.0], [65.1, 191.0], [65.2, 191.0], [65.3, 192.0], [65.4, 193.0], [65.5, 193.0], [65.6, 193.0], [65.7, 194.0], [65.8, 194.0], [65.9, 194.0], [66.0, 195.0], [66.1, 195.0], [66.2, 196.0], [66.3, 197.0], [66.4, 197.0], [66.5, 198.0], [66.6, 198.0], [66.7, 199.0], [66.8, 199.0], [66.9, 200.0], [67.0, 200.0], [67.1, 201.0], [67.2, 202.0], [67.3, 202.0], [67.4, 203.0], [67.5, 203.0], [67.6, 204.0], [67.7, 204.0], [67.8, 205.0], [67.9, 206.0], [68.0, 206.0], [68.1, 207.0], [68.2, 207.0], [68.3, 207.0], [68.4, 208.0], [68.5, 208.0], [68.6, 209.0], [68.7, 209.0], [68.8, 209.0], [68.9, 210.0], [69.0, 210.0], [69.1, 211.0], [69.2, 211.0], [69.3, 211.0], [69.4, 212.0], [69.5, 212.0], [69.6, 212.0], [69.7, 213.0], [69.8, 213.0], [69.9, 213.0], [70.0, 213.0], [70.1, 213.0], [70.2, 214.0], [70.3, 214.0], [70.4, 215.0], [70.5, 215.0], [70.6, 215.0], [70.7, 216.0], [70.8, 216.0], [70.9, 216.0], [71.0, 217.0], [71.1, 217.0], [71.2, 217.0], [71.3, 218.0], [71.4, 219.0], [71.5, 219.0], [71.6, 219.0], [71.7, 220.0], [71.8, 220.0], [71.9, 220.0], [72.0, 221.0], [72.1, 221.0], [72.2, 221.0], [72.3, 221.0], [72.4, 222.0], [72.5, 222.0], [72.6, 223.0], [72.7, 223.0], [72.8, 223.0], [72.9, 224.0], [73.0, 224.0], [73.1, 225.0], [73.2, 226.0], [73.3, 226.0], [73.4, 227.0], [73.5, 227.0], [73.6, 228.0], [73.7, 228.0], [73.8, 228.0], [73.9, 229.0], [74.0, 230.0], [74.1, 230.0], [74.2, 231.0], [74.3, 232.0], [74.4, 233.0], [74.5, 234.0], [74.6, 234.0], [74.7, 235.0], [74.8, 235.0], [74.9, 236.0], [75.0, 238.0], [75.1, 239.0], [75.2, 240.0], [75.3, 241.0], [75.4, 241.0], [75.5, 242.0], [75.6, 242.0], [75.7, 243.0], [75.8, 245.0], [75.9, 245.0], [76.0, 246.0], [76.1, 247.0], [76.2, 247.0], [76.3, 248.0], [76.4, 249.0], [76.5, 249.0], [76.6, 250.0], [76.7, 250.0], [76.8, 251.0], [76.9, 251.0], [77.0, 251.0], [77.1, 252.0], [77.2, 253.0], [77.3, 253.0], [77.4, 254.0], [77.5, 255.0], [77.6, 255.0], [77.7, 255.0], [77.8, 256.0], [77.9, 256.0], [78.0, 256.0], [78.1, 257.0], [78.2, 257.0], [78.3, 258.0], [78.4, 259.0], [78.5, 259.0], [78.6, 260.0], [78.7, 260.0], [78.8, 261.0], [78.9, 262.0], [79.0, 262.0], [79.1, 263.0], [79.2, 263.0], [79.3, 264.0], [79.4, 265.0], [79.5, 266.0], [79.6, 266.0], [79.7, 267.0], [79.8, 267.0], [79.9, 268.0], [80.0, 269.0], [80.1, 269.0], [80.2, 270.0], [80.3, 271.0], [80.4, 272.0], [80.5, 272.0], [80.6, 272.0], [80.7, 273.0], [80.8, 274.0], [80.9, 274.0], [81.0, 275.0], [81.1, 275.0], [81.2, 276.0], [81.3, 276.0], [81.4, 277.0], [81.5, 277.0], [81.6, 278.0], [81.7, 278.0], [81.8, 279.0], [81.9, 279.0], [82.0, 280.0], [82.1, 280.0], [82.2, 280.0], [82.3, 281.0], [82.4, 281.0], [82.5, 282.0], [82.6, 282.0], [82.7, 283.0], [82.8, 284.0], [82.9, 284.0], [83.0, 285.0], [83.1, 285.0], [83.2, 285.0], [83.3, 286.0], [83.4, 287.0], [83.5, 287.0], [83.6, 288.0], [83.7, 288.0], [83.8, 289.0], [83.9, 290.0], [84.0, 290.0], [84.1, 291.0], [84.2, 291.0], [84.3, 292.0], [84.4, 292.0], [84.5, 293.0], [84.6, 294.0], [84.7, 295.0], [84.8, 295.0], [84.9, 296.0], [85.0, 296.0], [85.1, 297.0], [85.2, 298.0], [85.3, 299.0], [85.4, 299.0], [85.5, 300.0], [85.6, 301.0], [85.7, 302.0], [85.8, 303.0], [85.9, 304.0], [86.0, 304.0], [86.1, 305.0], [86.2, 306.0], [86.3, 307.0], [86.4, 308.0], [86.5, 308.0], [86.6, 310.0], [86.7, 310.0], [86.8, 311.0], [86.9, 314.0], [87.0, 315.0], [87.1, 317.0], [87.2, 318.0], [87.3, 320.0], [87.4, 321.0], [87.5, 323.0], [87.6, 324.0], [87.7, 325.0], [87.8, 326.0], [87.9, 327.0], [88.0, 328.0], [88.1, 330.0], [88.2, 331.0], [88.3, 332.0], [88.4, 334.0], [88.5, 334.0], [88.6, 336.0], [88.7, 338.0], [88.8, 339.0], [88.9, 341.0], [89.0, 341.0], [89.1, 343.0], [89.2, 345.0], [89.3, 346.0], [89.4, 348.0], [89.5, 349.0], [89.6, 351.0], [89.7, 352.0], [89.8, 354.0], [89.9, 355.0], [90.0, 358.0], [90.1, 359.0], [90.2, 360.0], [90.3, 361.0], [90.4, 363.0], [90.5, 364.0], [90.6, 366.0], [90.7, 366.0], [90.8, 368.0], [90.9, 369.0], [91.0, 370.0], [91.1, 372.0], [91.2, 374.0], [91.3, 376.0], [91.4, 378.0], [91.5, 379.0], [91.6, 385.0], [91.7, 389.0], [91.8, 392.0], [91.9, 404.0], [92.0, 410.0], [92.1, 412.0], [92.2, 414.0], [92.3, 420.0], [92.4, 430.0], [92.5, 448.0], [92.6, 457.0], [92.7, 460.0], [92.8, 465.0], [92.9, 468.0], [93.0, 470.0], [93.1, 472.0], [93.2, 474.0], [93.3, 477.0], [93.4, 479.0], [93.5, 481.0], [93.6, 485.0], [93.7, 1059.0], [93.8, 1062.0], [93.9, 1064.0], [94.0, 1065.0], [94.1, 1066.0], [94.2, 1068.0], [94.3, 1069.0], [94.4, 1071.0], [94.5, 1072.0], [94.6, 1072.0], [94.7, 1073.0], [94.8, 1074.0], [94.9, 1075.0], [95.0, 1077.0], [95.1, 1077.0], [95.2, 1078.0], [95.3, 1079.0], [95.4, 1081.0], [95.5, 1081.0], [95.6, 1083.0], [95.7, 1084.0], [95.8, 1086.0], [95.9, 1088.0], [96.0, 1090.0], [96.1, 1091.0], [96.2, 1092.0], [96.3, 1093.0], [96.4, 1095.0], [96.5, 1097.0], [96.6, 1099.0], [96.7, 1101.0], [96.8, 1103.0], [96.9, 1107.0], [97.0, 1108.0], [97.1, 1111.0], [97.2, 1117.0], [97.3, 1123.0], [97.4, 1126.0], [97.5, 1129.0], [97.6, 1132.0], [97.7, 1137.0], [97.8, 1143.0], [97.9, 1146.0], [98.0, 1148.0], [98.1, 1152.0], [98.2, 1152.0], [98.3, 1155.0], [98.4, 1158.0], [98.5, 1160.0], [98.6, 1164.0], [98.7, 1166.0], [98.8, 1171.0], [98.9, 1177.0], [99.0, 1185.0], [99.1, 1226.0], [99.2, 1276.0], [99.3, 1320.0], [99.4, 1843.0], [99.5, 1852.0], [99.6, 1857.0], [99.7, 1865.0], [99.8, 3072.0], [99.9, 3080.0], [100.0, 3345.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3848.0, "series": [{"data": [[1200.0, 39.0], [1300.0, 1.0], [200.0, 2.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 28.0], [3000.0, 2.0], [400.0, 1.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 3848.0], [1100.0, 244.0], [300.0, 639.0], [1200.0, 20.0], [1300.0, 9.0], [3000.0, 23.0], [100.0, 2837.0], [400.0, 179.0], [200.0, 1860.0], [3300.0, 2.0], [1800.0, 40.0], [1000.0, 299.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10038.0, "series": [{"data": [[0.0, 3.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 39.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 10038.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 874.5053550178523, "minX": 1.70301882E12, "maxY": 874.5053550178523, "series": [{"data": [[1.70301882E12, 874.5053550178523]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70301882E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.0, "maxY": 3345.0, "series": [{"data": [[514.0, 1232.0], [516.0, 1240.3333333333333], [515.0, 1242.0], [512.0, 1244.0], [2.0, 252.0], [1.0, 270.0], [421.0, 1265.0], [437.0, 1262.0], [463.0, 1259.6666666666667], [460.0, 1239.0], [456.0, 1266.0], [455.0, 1315.5], [452.0, 1265.0], [473.0, 1231.0], [469.0, 1249.0], [471.0, 1256.0], [470.0, 1234.0], [468.0, 1251.5], [487.0, 1245.0], [486.0, 1225.0], [484.0, 1227.0], [483.0, 1251.0], [482.0, 1239.0], [480.0, 1227.0], [481.0, 1230.0], [511.0, 1245.0], [510.0, 1221.0], [506.0, 1246.0], [504.0, 1249.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[456.42857142857156, 1201.5952380952383]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[514.0, 634.0], [516.0, 598.0], [515.0, 595.0], [512.0, 600.0], [2.0, 3086.0], [1.0, 3075.0], [421.0, 631.0], [437.0, 607.0], [463.0, 598.6666666666666], [460.0, 617.0], [456.0, 593.0], [455.0, 541.0], [452.0, 597.0], [473.0, 624.0], [469.0, 618.6666666666666], [471.0, 592.0], [470.0, 621.0], [468.0, 607.0], [487.0, 607.0], [486.0, 626.0], [484.0, 617.0], [483.0, 600.0], [482.0, 616.5], [480.0, 626.0], [481.0, 620.5], [511.0, 596.0], [510.0, 623.0], [506.0, 632.0], [504.0, 595.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[456.42857142857156, 724.3809523809523]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 3339.0], [3.0, 3085.0], [4.0, 3080.0], [5.0, 3079.0], [6.0, 3077.0], [7.0, 3079.0], [8.0, 3084.0], [9.0, 3084.0], [10.0, 3084.0], [11.0, 3075.0], [12.0, 3071.0], [13.0, 3081.0], [14.0, 1065.0], [15.0, 1081.0], [16.0, 1059.0], [17.0, 1066.0], [18.0, 1084.0], [19.0, 1083.0], [20.0, 1072.0], [21.0, 1081.0], [22.0, 1068.0], [23.0, 1064.0], [24.0, 1072.0], [25.0, 1064.0], [26.0, 1075.0], [27.0, 1077.0], [28.0, 1078.0], [29.0, 1077.0], [30.0, 1082.0], [31.0, 1080.0], [33.0, 1078.0], [32.0, 1068.0], [35.0, 2070.0], [36.0, 1071.0], [39.0, 1067.0], [38.0, 2057.5], [41.0, 1072.0], [40.0, 1084.0], [43.0, 3087.0], [42.0, 1063.0], [45.0, 3079.0], [44.0, 1073.0], [47.0, 1062.0], [46.0, 3081.0], [49.0, 1083.0], [48.0, 3058.0], [51.0, 3074.0], [50.0, 3078.0], [53.0, 3067.0], [52.0, 1073.0], [55.0, 1073.5], [57.0, 1078.0], [56.0, 1069.0], [59.0, 1086.0], [58.0, 1077.0], [61.0, 1081.0], [60.0, 1061.0], [63.0, 1075.0], [62.0, 1076.0], [67.0, 1082.0], [66.0, 3073.0], [65.0, 1075.0], [64.0, 1068.0], [71.0, 1073.0], [70.0, 1077.0], [69.0, 1076.0], [68.0, 1083.0], [75.0, 1073.0], [74.0, 1054.0], [73.0, 1064.0], [72.0, 1057.0], [79.0, 1068.0], [78.0, 1072.0], [77.0, 1074.0], [76.0, 1073.0], [83.0, 1071.0], [82.0, 1077.0], [81.0, 1060.0], [80.0, 3072.0], [87.0, 1063.0], [86.0, 1066.0], [85.0, 3092.0], [84.0, 1084.0], [91.0, 1070.0], [90.0, 1115.0], [89.0, 1077.0], [88.0, 1072.0], [95.0, 1096.0], [92.0, 1105.0], [99.0, 1084.0], [98.0, 1086.0], [97.0, 1092.0], [107.0, 1123.0], [104.0, 1082.0], [111.0, 643.0], [110.0, 1108.6666666666667], [115.0, 1106.0], [114.0, 878.75], [113.0, 397.5], [119.0, 1079.0], [118.0, 1077.0], [117.0, 1105.0], [116.0, 1113.0], [121.0, 1079.0], [120.0, 1076.0], [127.0, 782.6666666666666], [126.0, 1079.0], [135.0, 144.0], [134.0, 127.0], [132.0, 1135.0], [130.0, 132.0], [129.0, 1106.0], [128.0, 1116.0], [138.0, 731.4], [137.0, 131.0], [151.0, 1116.0], [150.0, 1091.0], [149.0, 1093.0], [148.0, 424.80000000000007], [146.0, 133.0], [158.0, 57.0], [163.0, 60.0], [172.0, 63.0], [171.0, 103.0], [175.0, 63.0], [176.0, 65.5], [183.0, 62.0], [180.0, 63.5], [179.0, 69.0], [182.0, 66.8], [181.0, 66.0], [178.0, 69.66666666666667], [187.0, 66.375], [189.0, 69.0], [185.0, 69.5], [190.0, 66.77777777777779], [184.0, 66.0], [186.0, 76.0], [188.0, 64.0], [191.0, 56.0], [198.0, 63.5], [194.0, 89.0], [206.0, 98.0], [204.0, 83.0], [200.0, 87.0], [214.0, 66.0], [215.0, 73.5], [213.0, 73.5], [211.0, 100.0], [210.0, 86.0], [222.0, 69.83333333333333], [223.0, 97.0], [221.0, 72.0], [218.0, 89.0], [217.0, 89.0], [216.0, 79.66666666666667], [219.0, 276.2], [220.0, 74.5], [224.0, 471.6666666666667], [231.0, 330.2], [230.0, 72.0], [228.0, 319.6], [227.0, 73.6], [225.0, 113.5], [226.0, 121.0], [239.0, 83.0], [238.0, 360.625], [236.0, 348.75], [235.0, 142.0], [234.0, 63.0], [232.0, 77.66666666666667], [237.0, 73.75], [233.0, 620.0], [246.0, 110.0], [244.0, 406.5], [243.0, 59.0], [242.0, 75.0], [241.0, 587.5], [240.0, 128.75], [245.0, 185.0], [253.0, 72.0], [251.0, 72.0], [248.0, 63.0], [254.0, 318.6], [250.0, 107.66666666666667], [249.0, 124.0], [255.0, 1123.0], [252.0, 146.5], [269.0, 119.28571428571429], [268.0, 71.66666666666667], [259.0, 70.0], [258.0, 101.25], [257.0, 72.66666666666667], [266.0, 89.69999999999999], [256.0, 71.5], [261.0, 250.4285714285714], [262.0, 94.0], [263.0, 81.5], [260.0, 63.0], [265.0, 87.16666666666666], [264.0, 76.5], [267.0, 71.0], [271.0, 97.5], [270.0, 73.5], [274.0, 252.33333333333331], [273.0, 81.33333333333334], [272.0, 86.0], [279.0, 66.4], [275.0, 464.0], [283.0, 65.5], [287.0, 162.27272727272725], [281.0, 92.5], [286.0, 77.66666666666667], [285.0, 296.55555555555554], [284.0, 71.77777777777777], [278.0, 247.33333333333331], [277.0, 67.5], [276.0, 108.33333333333334], [288.0, 63.5], [292.0, 135.0], [293.0, 70.66666666666666], [303.0, 91.50000000000001], [302.0, 82.4], [300.0, 66.0], [301.0, 61.0], [291.0, 68.4], [289.0, 77.11111111111111], [290.0, 60.666666666666664], [299.0, 78.44444444444444], [298.0, 77.9090909090909], [296.0, 60.8], [297.0, 83.4], [294.0, 68.72727272727272], [295.0, 64.5], [316.0, 62.0], [318.0, 445.0], [314.0, 68.88888888888889], [315.0, 136.33333333333334], [317.0, 83.5], [312.0, 83.0], [319.0, 70.0], [309.0, 74.30769230769232], [308.0, 97.5], [313.0, 215.0], [311.0, 85.5], [304.0, 72.0], [306.0, 95.33333333333333], [305.0, 80.0], [310.0, 67.75], [333.0, 92.41666666666667], [329.0, 103.0], [327.0, 108.3], [326.0, 98.8], [325.0, 141.0], [331.0, 103.66666666666667], [330.0, 448.3333333333333], [334.0, 89.81249999999999], [335.0, 137.0], [332.0, 76.66666666666666], [321.0, 121.33333333333333], [322.0, 430.3333333333333], [320.0, 70.0], [323.0, 104.16666666666666], [328.0, 79.45454545454544], [339.0, 92.41666666666667], [342.0, 177.4193548387097], [351.0, 78.52941176470587], [344.0, 121.625], [350.0, 71.875], [348.0, 80.5], [349.0, 233.71428571428572], [346.0, 85.74999999999999], [347.0, 88.15384615384616], [345.0, 232.28571428571428], [343.0, 78.27272727272727], [338.0, 63.5], [337.0, 77.9090909090909], [336.0, 76.99999999999999], [341.0, 81.83333333333334], [340.0, 68.4], [366.0, 127.47368421052632], [358.0, 68.82608695652175], [357.0, 70.0], [354.0, 75.86111111111106], [356.0, 64.84210526315789], [367.0, 113.8695652173913], [360.0, 70.0909090909091], [364.0, 112.99999999999999], [355.0, 178.1], [365.0, 76.28571428571429], [361.0, 174.7], [362.0, 106.0], [363.0, 119.04761904761901], [353.0, 78.0344827586207], [359.0, 67.35714285714286], [352.0, 86.75], [380.0, 78.04999999999998], [368.0, 72.48], [370.0, 104.29411764705883], [369.0, 68.89189189189187], [371.0, 228.7], [374.0, 185.0344827586207], [373.0, 117.26086956521738], [372.0, 173.54999999999998], [375.0, 67.55555555555554], [379.0, 142.07142857142858], [378.0, 121.65217391304348], [377.0, 299.8333333333333], [383.0, 138.75], [376.0, 179.78947368421052], [382.0, 176.61290322580646], [381.0, 85.0952380952381], [398.0, 77.45454545454544], [385.0, 72.29166666666666], [388.0, 75.38461538461537], [390.0, 75.07142857142856], [389.0, 236.32000000000002], [386.0, 120.19999999999997], [387.0, 211.8], [384.0, 135.42105263157893], [391.0, 111.70967741935482], [399.0, 281.8571428571429], [393.0, 202.89473684210526], [392.0, 85.64999999999999], [397.0, 128.65384615384616], [396.0, 77.14285714285715], [395.0, 81.95833333333333], [394.0, 259.7647058823529], [412.0, 178.3], [413.0, 189.63636363636363], [406.0, 90.36842105263158], [405.0, 76.88235294117646], [404.0, 188.89285714285714], [402.0, 339.7], [401.0, 218.0], [403.0, 168.22727272727272], [400.0, 249.42857142857144], [407.0, 297.21739130434787], [409.0, 123.57142857142857], [411.0, 222.6875], [410.0, 86.80952380952381], [408.0, 83.74074074074073], [414.0, 125.14285714285715], [415.0, 228.1], [430.0, 112.16666666666667], [431.0, 110.25000000000001], [428.0, 203.66666666666666], [429.0, 211.79999999999998], [418.0, 418.10526315789474], [419.0, 157.1875], [423.0, 116.42857142857143], [416.0, 139.66666666666666], [417.0, 379.7142857142857], [427.0, 158.37037037037035], [426.0, 83.33333333333333], [425.0, 134.56521739130434], [424.0, 181.04166666666666], [422.0, 219.1818181818182], [421.0, 264.45454545454544], [420.0, 99.41666666666666], [446.0, 290.8], [447.0, 358.00000000000006], [445.0, 200.3], [444.0, 212.5], [443.0, 76.12500000000001], [442.0, 109.3], [441.0, 223.86666666666665], [440.0, 395.79999999999995], [438.0, 101.5], [435.0, 305.4], [432.0, 166.92307692307688], [439.0, 200.0909090909091], [433.0, 140.35294117647058], [434.0, 91.14285714285714], [436.0, 315.6428571428571], [437.0, 185.05263157894734], [451.0, 262.0], [462.0, 364.2], [460.0, 717.0], [461.0, 101.8], [459.0, 263.5], [458.0, 101.33333333333333], [457.0, 116.66666666666667], [456.0, 335.22222222222223], [463.0, 745.875], [455.0, 487.44444444444446], [453.0, 179.78571428571428], [454.0, 75.0], [452.0, 395.7142857142857], [450.0, 267.4166666666667], [449.0, 202.33333333333331], [448.0, 114.0], [477.0, 247.57142857142858], [476.0, 82.5], [467.0, 289.4], [475.0, 225.37499999999997], [474.0, 149.0], [473.0, 299.49999999999994], [472.0, 84.66666666666667], [479.0, 248.95454545454544], [478.0, 434.77777777777777], [470.0, 283.8888888888889], [468.0, 981.7333333333332], [469.0, 498.6153846153847], [466.0, 381.57142857142856], [464.0, 383.90000000000003], [465.0, 323.9230769230769], [471.0, 251.0909090909091], [481.0, 712.0000000000001], [488.0, 168.5], [489.0, 146.09090909090912], [487.0, 331.3333333333333], [486.0, 509.25], [483.0, 555.5714285714286], [495.0, 138.66666666666669], [494.0, 230.66666666666669], [492.0, 300.0], [493.0, 379.42857142857144], [482.0, 460.0], [480.0, 329.47058823529414], [490.0, 257.8571428571429], [491.0, 194.5], [485.0, 106.00000000000001], [484.0, 497.6], [510.0, 103.9642857142857], [505.0, 72.23076923076924], [509.0, 101.5], [508.0, 142.23333333333335], [499.0, 203.35294117647055], [498.0, 376.5], [496.0, 110.0], [497.0, 228.0], [511.0, 237.44444444444449], [506.0, 350.49999999999994], [507.0, 340.77777777777777], [504.0, 179.76], [503.0, 277.1666666666667], [502.0, 246.24999999999994], [500.0, 119.99999999999999], [501.0, 186.48387096774192], [514.0, 548.1818181818182], [538.0, 132.7142857142857], [522.0, 82.6896551724138], [524.0, 300.0], [520.0, 77.66666666666667], [518.0, 121.25], [536.0, 1075.0], [540.0, 153.14285714285714], [516.0, 738.75], [512.0, 242.27777777777777], [526.0, 174.0], [542.0, 449.71428571428567], [528.0, 427.0], [530.0, 74.2], [532.0, 71.0], [534.0, 343.6], [544.0, 1185.0], [570.0, 78.66666666666667], [552.0, 295.1428571428571], [546.0, 166.5], [548.0, 364.5], [558.0, 98.0], [556.0, 197.5], [554.0, 72.5], [566.0, 627.5], [564.0, 252.79999999999998], [562.0, 512.5714285714286], [560.0, 76.66666666666667], [574.0, 145.33333333333334], [572.0, 569.25], [568.0, 343.0], [592.0, 74.33333333333333], [582.0, 83.66666666666667], [598.0, 92.00000000000001], [596.0, 122.5], [594.0, 158.8], [606.0, 280.0], [604.0, 618.25], [602.0, 307.0], [586.0, 113.75], [588.0, 66.0], [590.0, 203.5], [584.0, 131.6], [600.0, 87.55555555555556], [580.0, 85.33333333333334], [578.0, 213.95000000000002], [576.0, 167.0], [632.0, 276.0], [616.0, 176.2857142857143], [618.0, 160.0], [620.0, 145.75], [638.0, 420.57142857142856], [636.0, 497.66666666666663], [634.0, 206.66666666666669], [614.0, 196.25], [612.0, 639.5], [610.0, 219.75], [608.0, 734.5], [630.0, 152.0], [626.0, 68.0], [624.0, 202.25], [670.0, 65.0], [644.0, 111.28571428571428], [666.0, 244.5], [664.0, 158.5], [668.0, 154.5], [646.0, 209.11111111111111], [662.0, 215.5], [660.0, 163.5], [658.0, 211.75], [656.0, 195.66666666666666], [642.0, 439.33333333333337], [640.0, 112.0], [652.0, 63.0], [654.0, 214.5], [650.0, 467.25000000000006], [676.0, 133.66666666666666], [702.0, 171.70000000000002], [686.0, 134.0], [674.0, 141.6], [684.0, 170.8], [682.0, 297.8333333333333], [680.0, 161.5], [688.0, 722.0], [698.0, 389.25], [700.0, 254.5], [696.0, 182.8], [678.0, 95.26923076923079], [692.0, 107.2], [694.0, 260.0], [690.0, 97.14285714285714], [704.0, 204.5], [732.0, 458.0], [734.0, 100.8], [718.0, 276.0], [716.0, 119.8], [712.0, 276.3333333333333], [706.0, 379.5], [708.0, 322.5], [730.0, 152.0], [728.0, 206.0], [726.0, 180.44444444444446], [724.0, 173.33333333333334], [720.0, 151.0], [722.0, 297.0], [710.0, 140.8], [764.0, 333.8], [762.0, 155.0], [766.0, 203.0], [752.0, 218.0], [756.0, 110.0], [758.0, 148.0], [748.0, 536.0], [746.0, 112.0], [744.0, 250.75], [742.0, 120.0], [740.0, 240.6], [738.0, 320.0], [736.0, 157.5], [750.0, 156.5], [760.0, 710.0], [798.0, 551.6], [784.0, 163.57142857142858], [786.0, 189.5], [790.0, 204.25], [796.0, 192.5], [794.0, 436.75], [774.0, 255.66666666666666], [792.0, 152.0], [782.0, 69.5], [780.0, 1153.0], [778.0, 553.0], [776.0, 224.625], [772.0, 340.25], [770.0, 111.36363636363636], [768.0, 200.5], [826.0, 90.5], [824.0, 216.0], [830.0, 106.42857142857142], [816.0, 656.5], [818.0, 82.0], [820.0, 419.66666666666663], [810.0, 103.66666666666667], [808.0, 174.33333333333334], [828.0, 173.0], [806.0, 118.25000000000001], [804.0, 180.0], [802.0, 421.2857142857143], [800.0, 652.0], [812.0, 154.77777777777777], [822.0, 139.25], [858.0, 881.5], [862.0, 436.6666666666667], [854.0, 110.0], [848.0, 380.66666666666663], [856.0, 128.33333333333334], [860.0, 416.5], [838.0, 308.2], [836.0, 302.9], [834.0, 164.33333333333334], [832.0, 164.0], [846.0, 442.25], [844.0, 292.0], [842.0, 438.0], [840.0, 391.2857142857143], [852.0, 95.85714285714286], [850.0, 88.16666666666667], [888.0, 132.7], [890.0, 161.33333333333331], [892.0, 294.2], [880.0, 144.0], [894.0, 271.5], [884.0, 97.66666666666667], [876.0, 104.16666666666666], [864.0, 202.875], [878.0, 575.6666666666667], [870.0, 147.0], [868.0, 84.0], [866.0, 537.8], [874.0, 190.83333333333331], [872.0, 300.8], [912.0, 110.5], [922.0, 434.5833333333333], [904.0, 214.44444444444446], [906.0, 356.0], [918.0, 115.5], [916.0, 318.7142857142857], [914.0, 193.75], [924.0, 354.6666666666667], [902.0, 66.0], [920.0, 213.66666666666666], [898.0, 139.28571428571428], [900.0, 302.8], [896.0, 362.70000000000005], [910.0, 341.0], [908.0, 358.5], [932.0, 213.2857142857143], [938.0, 366.6666666666667], [936.0, 148.66666666666666], [934.0, 438.0], [930.0, 202.25], [928.0, 127.0], [954.0, 245.0], [952.0, 252.25], [948.0, 71.0], [958.0, 401.75], [944.0, 103.33333333333333], [946.0, 773.0], [942.0, 340.42857142857144], [988.0, 203.0], [976.0, 743.0], [978.0, 1141.0], [980.0, 245.5], [982.0, 325.16666666666663], [990.0, 244.75], [986.0, 61.0], [970.0, 244.25], [968.0, 178.0], [972.0, 236.33333333333331], [974.0, 115.0], [960.0, 118.33333333333333], [966.0, 78.12962962962963], [984.0, 340.5], [964.0, 95.42857142857143], [962.0, 136.50000000000003], [1018.0, 161.16666666666666], [1008.0, 309.0], [1016.0, 530.6666666666666], [1006.0, 455.66666666666663], [992.0, 220.2857142857143], [996.0, 229.0], [998.0, 151.54545454545456], [1004.0, 275.0], [1000.0, 211.4], [1020.0, 441.83333333333337], [1014.0, 329.7142857142857], [1010.0, 86.66666666666666], [1012.0, 422.75], [1022.0, 258.0], [1072.0, 137.25], [1036.0, 107.5], [1068.0, 217.66666666666666], [1064.0, 169.0], [1060.0, 139.0], [1056.0, 221.71428571428572], [1032.0, 320.0], [1028.0, 244.625], [1024.0, 625.5], [1052.0, 125.5], [1048.0, 309.0], [1044.0, 179.0], [1040.0, 439.33333333333337], [1080.0, 298.5], [1076.0, 362.0], [1088.0, 163.4], [1092.0, 142.5], [1148.0, 202.2], [1128.0, 225.66666666666666], [1120.0, 214.0], [1132.0, 216.75], [1112.0, 221.14285714285714], [1108.0, 195.0], [1104.0, 195.0], [1116.0, 187.0], [1096.0, 265.6666666666667], [1100.0, 173.0], [1140.0, 212.375], [1136.0, 215.4], [1144.0, 341.0], [1156.0, 180.66509433962267], [1200.0, 207.0], [1152.0, 352.0], [1160.0, 177.0], [1164.0, 835.0], [1172.0, 224.0], [1168.0, 212.66666666666666], [1176.0, 175.5], [1180.0, 179.6], [1196.0, 166.66666666666669], [1192.0, 237.83333333333331], [1188.0, 139.0], [1184.0, 543.5], [1208.0, 296.0], [1204.0, 278.0], [1272.0, 127.0], [1248.0, 192.5], [1252.0, 174.33333333333334], [1216.0, 282.0], [1240.0, 222.66666666666669], [1232.0, 271.0], [1276.0, 174.2], [1268.0, 112.0], [1228.0, 270.0], [1224.0, 272.5], [1260.0, 117.0], [1256.0, 184.5], [1292.0, 256.0], [1340.0, 198.66666666666666], [1320.0, 69.0], [1328.0, 83.76923076923079], [1288.0, 1092.0], [1284.0, 260.0], [1280.0, 141.33333333333334], [1308.0, 141.0], [1304.0, 59.0], [1300.0, 211.66666666666666], [1296.0, 245.5], [1324.0, 295.0], [1396.0, 139.5], [1404.0, 72.0], [1388.0, 232.8], [1376.0, 196.0], [1352.0, 164.0], [1348.0, 151.66666666666669], [1372.0, 73.5], [1368.0, 327.0], [1364.0, 213.75], [1456.0, 211.25], [1440.0, 206.2], [1444.0, 72.0], [1452.0, 204.8], [1448.0, 235.0], [1464.0, 228.0], [1420.0, 206.5227272727273], [1416.0, 139.88888888888889], [1412.0, 271.0], [1408.0, 140.85714285714286], [1436.0, 73.0], [1432.0, 272.3333333333333], [1428.0, 231.85714285714286], [1424.0, 159.0], [1528.0, 252.0], [1484.0, 245.5], [1504.0, 158.1818181818182], [1532.0, 293.1818181818182], [1516.0, 242.0], [1512.0, 244.8], [1508.0, 222.33333333333334], [1472.0, 253.99999999999997], [1500.0, 288.5], [1476.0, 228.0], [1520.0, 212.10000000000002], [1524.0, 287.7142857142857], [1496.0, 64.0], [1488.0, 235.33333333333334], [1492.0, 222.66666666666666], [1596.0, 307.50000000000006], [1568.0, 300.0], [1576.0, 329.0], [1580.0, 264.4], [1588.0, 223.0], [1592.0, 180.0], [1584.0, 390.0], [1548.0, 282.375], [1544.0, 229.2307692307692], [1540.0, 376.8], [1536.0, 420.8], [1564.0, 244.33333333333334], [1560.0, 236.0], [1556.0, 208.0], [1552.0, 274.9166666666667], [1604.0, 288.5], [1612.0, 324.75], [1624.0, 275.0], [1628.0, 434.9], [1600.0, 305.875], [1608.0, 320.40000000000003], [1620.0, 312.33333333333337], [1616.0, 303.125], [1648.0, 273.2], [1652.0, 298.25], [1656.0, 206.0], [1632.0, 221.25], [1644.0, 249.75], [1636.0, 248.85714285714286], [1660.0, 218.83333333333331], [1668.0, 212.5], [1664.0, 197.75], [1676.0, 244.75], [1692.0, 263.3333333333333], [1688.0, 216.5], [1684.0, 299.0], [1704.0, 191.5], [1708.0, 287.0], [1724.0, 258.0], [1700.0, 294.0], [1696.0, 264.0], [1720.0, 198.0], [1716.0, 186.5], [1712.0, 195.66666666666666], [1780.0, 1273.0], [1776.0, 761.5], [1740.0, 241.0], [1728.0, 271.6666666666667], [1768.0, 255.0], [1852.0, 262.0], [1820.0, 250.2], [1808.0, 281.0], [1832.0, 264.0], [1824.0, 251.0], [1836.0, 249.0], [1848.0, 248.0], [1844.0, 249.6], [1840.0, 245.0], [1888.0, 249.75], [1884.0, 453.4], [1880.0, 252.5], [1872.0, 248.0], [1868.0, 255.0], [1860.0, 270.0], [1057.0, 115.2], [1065.0, 149.5], [1069.0, 278.375], [1061.0, 183.0], [1033.0, 142.5], [1037.0, 123.625], [1029.0, 169.0], [1025.0, 174.33333333333334], [1053.0, 403.5], [1049.0, 121.33333333333333], [1045.0, 120.99999999999999], [1041.0, 215.0], [1085.0, 203.5], [1081.0, 218.57142857142858], [1077.0, 155.0], [1073.0, 238.2], [1097.0, 149.0], [1129.0, 151.6], [1125.0, 173.33333333333334], [1121.0, 222.0], [1133.0, 158.0], [1113.0, 166.5], [1109.0, 197.57142857142856], [1105.0, 158.0], [1117.0, 175.5], [1093.0, 251.42857142857142], [1101.0, 198.33333333333334], [1089.0, 223.75], [1137.0, 340.0], [1141.0, 199.875], [1145.0, 164.0], [1149.0, 175.75], [1157.0, 214.0], [1201.0, 117.5], [1205.0, 295.6666666666667], [1209.0, 273.5], [1153.0, 468.6], [1165.0, 545.0], [1161.0, 312.5], [1181.0, 115.25], [1173.0, 310.0], [1169.0, 182.42857142857142], [1177.0, 167.0], [1193.0, 147.5], [1189.0, 243.33333333333334], [1185.0, 133.0], [1197.0, 212.16666666666666], [1269.0, 276.875], [1265.0, 117.5], [1277.0, 117.0], [1249.0, 132.99999999999997], [1253.0, 167.66666666666666], [1273.0, 122.5], [1245.0, 260.0], [1217.0, 1166.0], [1221.0, 282.0], [1237.0, 124.0], [1233.0, 268.0], [1261.0, 145.45454545454544], [1257.0, 204.4], [1333.0, 73.66666666666667], [1317.0, 178.25], [1341.0, 297.0], [1337.0, 300.0], [1313.0, 77.0], [1321.0, 256.3333333333333], [1289.0, 682.0], [1281.0, 154.66666666666666], [1305.0, 90.5], [1297.0, 260.0], [1325.0, 67.0], [1397.0, 151.5], [1389.0, 166.30769230769232], [1381.0, 240.0], [1405.0, 181.5], [1357.0, 185.66666666666666], [1353.0, 179.5], [1345.0, 70.0], [1349.0, 290.0], [1369.0, 137.75], [1365.0, 182.77777777777777], [1361.0, 154.0], [1461.0, 72.0], [1457.0, 137.0], [1441.0, 248.0], [1445.0, 266.0], [1449.0, 125.14285714285714], [1465.0, 185.83333333333334], [1421.0, 257.6666666666667], [1417.0, 232.0], [1413.0, 166.78571428571428], [1409.0, 93.0], [1437.0, 159.0], [1433.0, 155.75], [1429.0, 129.0], [1425.0, 196.28571428571428], [1533.0, 258.84615384615387], [1521.0, 239.5], [1517.0, 237.875], [1513.0, 278.625], [1509.0, 238.4375], [1505.0, 234.0], [1501.0, 55.0], [1497.0, 128.0], [1473.0, 239.5], [1477.0, 225.25], [1481.0, 225.83333333333334], [1485.0, 65.0], [1525.0, 211.66666666666669], [1529.0, 308.5], [1493.0, 158.44444444444446], [1489.0, 793.0], [1593.0, 256.5], [1597.0, 348.6666666666667], [1573.0, 387.0], [1577.0, 469.0], [1581.0, 251.0], [1589.0, 251.0], [1585.0, 471.0], [1549.0, 211.5], [1545.0, 222.27272727272728], [1541.0, 245.625], [1565.0, 420.0], [1561.0, 211.81818181818184], [1557.0, 260.28571428571433], [1553.0, 219.66666666666666], [1605.0, 315.6], [1609.0, 330.5], [1601.0, 239.6153846153846], [1625.0, 207.0], [1629.0, 223.66666666666666], [1621.0, 328.0], [1617.0, 280.46666666666675], [1649.0, 187.66666666666666], [1657.0, 233.66666666666666], [1633.0, 549.6666666666666], [1637.0, 231.0], [1641.0, 307.0], [1645.0, 193.0], [1613.0, 240.33333333333334], [1677.0, 237.8], [1717.0, 196.0], [1721.0, 211.5], [1713.0, 195.0], [1693.0, 190.33333333333334], [1669.0, 224.33333333333334], [1681.0, 295.0], [1689.0, 300.0], [1709.0, 211.4], [1705.0, 248.25], [1701.0, 193.0], [1697.0, 182.0], [1725.0, 221.0], [1741.0, 241.0], [1789.0, 265.0], [1761.0, 748.5], [1785.0, 268.5], [1737.0, 241.0], [1733.0, 293.0], [1729.0, 293.0], [1757.0, 281.75], [1749.0, 223.0], [1745.0, 249.33333333333334], [1769.0, 271.5], [1797.0, 281.0], [1853.0, 248.0], [1817.0, 253.0], [1813.0, 273.0], [1821.0, 255.0], [1801.0, 280.0], [1833.0, 256.5], [1837.0, 256.0], [1829.0, 264.4285714285714], [1877.0, 242.0], [1873.0, 258.0], [1861.0, 770.0], [515.0, 277.43749999999994], [521.0, 211.0], [537.0, 814.6666666666667], [519.0, 233.42857142857142], [539.0, 414.0], [517.0, 169.83333333333334], [527.0, 157.0], [513.0, 233.08333333333331], [525.0, 471.0], [543.0, 269.0], [531.0, 340.4], [529.0, 120.0], [533.0, 555.8571428571429], [535.0, 142.6923076923077], [541.0, 107.33333333333333], [547.0, 617.5], [553.0, 92.375], [551.0, 126.33333333333334], [559.0, 166.71428571428572], [545.0, 196.0], [549.0, 305.83333333333337], [557.0, 279.5], [555.0, 146.2], [573.0, 255.28571428571428], [575.0, 81.8], [567.0, 347.8333333333333], [565.0, 90.5], [563.0, 432.66666666666663], [571.0, 276.57142857142856], [569.0, 652.0], [593.0, 358.0], [601.0, 173.57142857142858], [579.0, 391.5], [599.0, 296.5], [597.0, 763.0], [595.0, 270.6666666666667], [603.0, 91.4], [607.0, 156.5], [605.0, 410.0], [585.0, 81.5], [587.0, 149.5], [591.0, 179.83333333333331], [589.0, 178.5], [583.0, 223.57142857142858], [577.0, 206.20000000000002], [581.0, 73.0], [615.0, 64.0], [637.0, 185.66666666666669], [617.0, 344.8333333333333], [621.0, 123.4], [619.0, 572.3333333333333], [635.0, 77.75], [633.0, 163.66666666666669], [639.0, 735.3333333333334], [613.0, 106.5], [609.0, 206.33333333333334], [623.0, 237.33333333333334], [631.0, 225.0], [629.0, 232.0], [625.0, 570.0], [627.0, 146.5], [665.0, 159.0], [669.0, 335.5], [671.0, 144.25], [667.0, 167.0], [647.0, 213.0], [661.0, 209.5], [657.0, 266.5], [643.0, 553.7142857142858], [641.0, 70.0], [655.0, 270.0], [653.0, 171.0], [651.0, 152.57142857142858], [663.0, 64.0], [699.0, 193.66666666666666], [675.0, 277.0], [685.0, 303.5], [703.0, 194.66666666666666], [697.0, 141.0], [679.0, 99.25], [677.0, 162.33333333333334], [693.0, 105.33333333333334], [695.0, 532.3333333333333], [691.0, 86.23076923076924], [689.0, 156.0], [707.0, 162.0], [727.0, 109.33333333333334], [719.0, 106.21428571428571], [717.0, 277.0], [715.0, 392.0], [713.0, 204.0], [705.0, 65.0], [709.0, 313.1666666666667], [733.0, 69.33333333333333], [731.0, 92.83333333333333], [729.0, 1163.0], [711.0, 256.0], [725.0, 158.0], [735.0, 251.0], [721.0, 157.0], [723.0, 229.0], [767.0, 142.0], [763.0, 261.0], [753.0, 154.0], [765.0, 708.0], [761.0, 164.5], [757.0, 149.0], [759.0, 207.5], [755.0, 514.5], [749.0, 63.0], [747.0, 127.33333333333333], [745.0, 365.25], [743.0, 489.66666666666663], [741.0, 227.0], [737.0, 71.0], [751.0, 1164.0], [797.0, 366.0], [773.0, 496.0], [783.0, 71.0], [799.0, 74.0], [787.0, 154.5], [789.0, 113.5], [791.0, 168.75], [795.0, 150.2], [793.0, 126.33333333333333], [775.0, 1159.0], [781.0, 154.66666666666666], [779.0, 362.6], [777.0, 427.6666666666667], [769.0, 705.5], [771.0, 557.6666666666667], [827.0, 161.28571428571428], [829.0, 350.4], [831.0, 108.22222222222223], [819.0, 141.0], [817.0, 170.5], [811.0, 131.0], [809.0, 177.66666666666666], [825.0, 110.0], [807.0, 450.0], [805.0, 178.25], [803.0, 76.0], [801.0, 150.0], [815.0, 149.66666666666666], [813.0, 185.25], [823.0, 852.3333333333334], [861.0, 346.5], [851.0, 367.0], [855.0, 151.14285714285714], [863.0, 225.0], [857.0, 80.5], [859.0, 374.5], [839.0, 119.83333333333334], [837.0, 107.5], [835.0, 87.57142857142857], [833.0, 112.0], [847.0, 433.0], [843.0, 68.0], [845.0, 810.3333333333333], [841.0, 283.0], [853.0, 138.5], [849.0, 101.66666666666667], [893.0, 69.5], [891.0, 378.0], [895.0, 506.66666666666663], [889.0, 148.125], [887.0, 260.3333333333333], [885.0, 542.0], [883.0, 177.25], [881.0, 263.0], [877.0, 184.0], [879.0, 404.25], [871.0, 200.0], [869.0, 331.0], [867.0, 102.33333333333333], [865.0, 62.666666666666664], [873.0, 315.6666666666667], [913.0, 115.5], [905.0, 164.0], [919.0, 191.79999999999998], [917.0, 359.3333333333333], [915.0, 455.0], [927.0, 600.0], [925.0, 163.0], [923.0, 123.0], [907.0, 157.85714285714283], [903.0, 380.0], [921.0, 429.6], [901.0, 65.0], [899.0, 153.0], [897.0, 463.66666666666663], [911.0, 440.7142857142857], [929.0, 246.0], [937.0, 83.5], [939.0, 355.0], [941.0, 162.0], [933.0, 461.0], [935.0, 127.0], [931.0, 355.0], [943.0, 152.0], [955.0, 171.4], [953.0, 178.2], [957.0, 212.0], [951.0, 369.0], [949.0, 358.5], [959.0, 259.6666666666667], [947.0, 152.66666666666666], [945.0, 449.25000000000006], [991.0, 347.0], [965.0, 132.0], [987.0, 132.0], [989.0, 334.0], [977.0, 114.0], [979.0, 308.875], [983.0, 121.0], [981.0, 168.6], [971.0, 214.44444444444446], [969.0, 163.5], [973.0, 167.875], [975.0, 307.25], [967.0, 340.2857142857143], [985.0, 355.6666666666667], [963.0, 272.6666666666667], [961.0, 96.5], [995.0, 133.33333333333334], [1017.0, 137.0], [1007.0, 419.6], [993.0, 745.5], [999.0, 131.0], [997.0, 487.25], [1005.0, 458.62499999999994], [1001.0, 129.0], [1003.0, 468.33333333333337], [1019.0, 126.66666666666667], [1013.0, 118.33333333333333], [1015.0, 196.33333333333334], [1009.0, 136.0], [1023.0, 457.66666666666663], [1021.0, 458.0], [1011.0, 181.0], [1058.0, 143.42857142857144], [1082.0, 181.5], [1070.0, 372.0], [1066.0, 307.83333333333337], [1062.0, 206.66666666666666], [1034.0, 322.49999999999994], [1038.0, 335.3333333333333], [1030.0, 230.75], [1026.0, 104.75], [1054.0, 124.44444444444444], [1050.0, 201.6], [1046.0, 95.2], [1042.0, 518.3333333333333], [1086.0, 166.875], [1078.0, 159.75], [1074.0, 342.0], [1090.0, 172.25], [1102.0, 166.75], [1122.0, 246.0], [1126.0, 236.2], [1134.0, 256.5], [1130.0, 176.0], [1114.0, 196.5], [1110.0, 160.66666666666666], [1106.0, 433.8], [1118.0, 279.0], [1094.0, 156.5], [1098.0, 256.4], [1138.0, 171.25], [1142.0, 211.75], [1150.0, 199.4], [1158.0, 304.0], [1154.0, 193.33333333333334], [1162.0, 183.0], [1166.0, 171.0], [1182.0, 224.33333333333334], [1174.0, 255.375], [1170.0, 177.0], [1178.0, 152.5], [1214.0, 279.0], [1202.0, 271.0], [1194.0, 137.0], [1198.0, 202.4], [1270.0, 155.71428571428572], [1278.0, 289.42857142857144], [1254.0, 567.6666666666666], [1222.0, 571.6666666666666], [1246.0, 135.0], [1218.0, 290.0], [1242.0, 171.66666666666666], [1238.0, 225.33333333333334], [1274.0, 174.0], [1266.0, 235.16666666666669], [1230.0, 275.0], [1226.0, 277.0], [1262.0, 183.7142857142857], [1258.0, 286.0], [1290.0, 261.0], [1330.0, 121.66666666666667], [1322.0, 79.0], [1314.0, 81.87719298245615], [1318.0, 155.5], [1286.0, 535.3333333333334], [1282.0, 369.6], [1310.0, 211.7142857142857], [1306.0, 241.3], [1302.0, 74.0], [1326.0, 75.66666666666667], [1402.0, 112.66666666666667], [1378.0, 266.33333333333337], [1390.0, 198.5], [1386.0, 62.5], [1382.0, 55.0], [1406.0, 76.0], [1398.0, 119.0], [1354.0, 119.5], [1394.0, 310.0], [1358.0, 256.6666666666667], [1350.0, 73.0], [1370.0, 321.0], [1366.0, 330.0], [1362.0, 213.33333333333334], [1466.0, 132.66666666666666], [1470.0, 744.0], [1442.0, 107.2], [1446.0, 218.2], [1450.0, 234.33333333333334], [1458.0, 172.0], [1462.0, 306.0], [1422.0, 228.6], [1418.0, 181.0], [1414.0, 190.24999999999997], [1410.0, 70.25], [1438.0, 173.44444444444446], [1434.0, 214.75], [1430.0, 746.5], [1426.0, 63.0], [1454.0, 163.75], [1506.0, 240.5], [1534.0, 355.625], [1518.0, 244.96666666666667], [1514.0, 238.14285714285714], [1510.0, 247.33333333333334], [1498.0, 121.33333333333333], [1502.0, 125.0], [1482.0, 223.5], [1478.0, 148.875], [1474.0, 230.0], [1486.0, 126.33333333333333], [1522.0, 293.0539682539681], [1526.0, 338.6363636363636], [1530.0, 275.66666666666663], [1494.0, 158.26666666666665], [1490.0, 125.42857142857143], [1598.0, 234.8], [1586.0, 345.2857142857143], [1570.0, 313.0], [1574.0, 476.0], [1578.0, 278.5], [1582.0, 287.3333333333333], [1590.0, 373.8], [1550.0, 234.2], [1546.0, 226.70000000000002], [1542.0, 295.29999999999995], [1538.0, 480.0], [1566.0, 304.6666666666667], [1562.0, 267.8333333333333], [1558.0, 304.83333333333337], [1554.0, 360.0], [1614.0, 271.8333333333333], [1602.0, 367.33333333333337], [1622.0, 201.0], [1606.0, 454.5], [1618.0, 265.25], [1650.0, 188.0], [1654.0, 225.2], [1662.0, 254.0], [1638.0, 185.0], [1642.0, 238.0], [1634.0, 200.5], [1610.0, 394.5], [1670.0, 193.0], [1718.0, 259.3333333333333], [1666.0, 217.0], [1694.0, 291.5], [1674.0, 207.0], [1690.0, 224.0], [1686.0, 250.0], [1682.0, 205.0], [1678.0, 208.8], [1710.0, 204.0], [1706.0, 200.2], [1722.0, 196.16666666666669], [1726.0, 224.28571428571428], [1698.0, 194.25], [1702.0, 300.0], [1714.0, 217.0], [1742.0, 277.0], [1778.0, 287.0], [1782.0, 281.0], [1790.0, 452.4], [1738.0, 290.0], [1734.0, 282.5], [1770.0, 254.0], [1754.0, 253.5], [1750.0, 261.6666666666667], [1794.0, 247.0], [1850.0, 251.33333333333334], [1818.0, 270.0], [1814.0, 253.0], [1822.0, 253.0], [1806.0, 246.0], [1802.0, 283.0], [1838.0, 249.5], [1834.0, 244.0], [1830.0, 246.0], [1854.0, 243.66666666666666], [1842.0, 263.0], [1862.0, 269.5], [1886.0, 249.0], [1870.0, 257.5], [1858.0, 260.0], [1035.0, 145.28571428571428], [1031.0, 142.31249999999997], [1063.0, 338.125], [1059.0, 229.5], [1039.0, 312.16666666666663], [1027.0, 257.77777777777777], [1055.0, 244.77777777777777], [1051.0, 353.33333333333337], [1047.0, 207.88888888888886], [1043.0, 121.66666666666667], [1087.0, 344.0], [1083.0, 308.0], [1079.0, 204.0], [1075.0, 267.6666666666667], [1119.0, 249.0], [1091.0, 259.5], [1127.0, 170.33333333333331], [1123.0, 204.71428571428572], [1131.0, 220.75], [1135.0, 271.0], [1111.0, 179.33333333333334], [1107.0, 236.25], [1115.0, 194.0], [1095.0, 554.3333333333333], [1099.0, 172.0], [1139.0, 210.0], [1103.0, 338.0], [1143.0, 177.71428571428572], [1147.0, 228.0], [1151.0, 339.0], [1155.0, 209.66666666666666], [1211.0, 682.0], [1167.0, 325.0], [1207.0, 295.0], [1215.0, 284.0], [1183.0, 180.5], [1163.0, 241.0], [1159.0, 338.5], [1195.0, 216.33333333333334], [1175.0, 63.0], [1171.0, 262.6666666666667], [1179.0, 209.0], [1191.0, 137.33333333333334], [1187.0, 132.33333333333334], [1271.0, 139.16666666666666], [1279.0, 111.0], [1251.0, 347.0], [1275.0, 194.4], [1263.0, 465.0], [1267.0, 248.0], [1243.0, 181.5], [1239.0, 272.0], [1223.0, 277.5], [1231.0, 274.0], [1227.0, 276.0], [1235.0, 123.0], [1259.0, 122.0], [1255.0, 122.0], [1283.0, 127.5], [1331.0, 212.33333333333334], [1335.0, 633.6666666666666], [1315.0, 71.5], [1311.0, 118.2], [1291.0, 615.5], [1307.0, 103.0], [1303.0, 77.33333333333333], [1299.0, 249.0], [1323.0, 117.48000000000003], [1403.0, 138.0], [1379.0, 128.5], [1391.0, 182.22222222222223], [1407.0, 153.5], [1399.0, 216.2], [1395.0, 229.66666666666666], [1359.0, 108.66666666666667], [1355.0, 203.0], [1351.0, 82.5], [1375.0, 305.0], [1367.0, 90.0], [1363.0, 85.0], [1463.0, 109.0], [1467.0, 59.666666666666664], [1471.0, 104.99999999999999], [1443.0, 229.0], [1447.0, 199.25], [1423.0, 242.0], [1419.0, 106.0], [1415.0, 192.0], [1411.0, 259.3333333333333], [1439.0, 240.0], [1435.0, 135.75], [1431.0, 190.0], [1455.0, 175.0], [1507.0, 209.44444444444446], [1535.0, 344.6666666666667], [1519.0, 243.16666666666669], [1515.0, 258.2], [1511.0, 248.88235294117646], [1499.0, 275.0], [1503.0, 140.20915032679744], [1475.0, 233.0], [1483.0, 228.75], [1479.0, 118.0], [1523.0, 271.83333333333337], [1527.0, 221.33333333333334], [1531.0, 272.0], [1491.0, 279.5], [1495.0, 133.25], [1599.0, 277.8571428571429], [1591.0, 300.0], [1571.0, 286.71428571428567], [1575.0, 345.25], [1579.0, 212.0], [1583.0, 470.5], [1595.0, 278.0], [1587.0, 325.6], [1551.0, 243.1], [1547.0, 224.375], [1543.0, 245.5], [1539.0, 312.61538461538464], [1567.0, 441.8], [1563.0, 416.0], [1559.0, 367.0], [1555.0, 260.16666666666663], [1607.0, 315.9230769230769], [1627.0, 521.0], [1631.0, 214.6], [1603.0, 261.6666666666667], [1623.0, 365.59999999999997], [1619.0, 243.66666666666666], [1615.0, 306.375], [1659.0, 303.0], [1635.0, 262.0], [1643.0, 257.57142857142856], [1639.0, 211.0], [1647.0, 193.0], [1655.0, 198.0], [1651.0, 203.5], [1611.0, 314.4], [1715.0, 266.5], [1723.0, 523.6666666666666], [1707.0, 215.0], [1719.0, 265.6666666666667], [1679.0, 203.0], [1675.0, 199.0], [1671.0, 202.5], [1667.0, 245.0], [1695.0, 295.0], [1687.0, 207.0], [1683.0, 302.0], [1711.0, 192.0], [1703.0, 210.0], [1699.0, 260.0], [1727.0, 296.0], [1763.0, 250.0], [1791.0, 459.6], [1783.0, 244.0], [1779.0, 256.0], [1775.0, 225.0], [1771.0, 275.0], [1795.0, 268.0], [1819.0, 262.4], [1815.0, 269.5], [1839.0, 263.8333333333333], [1847.0, 245.0], [1843.0, 746.0], [1823.0, 263.0], [1799.0, 252.5], [1827.0, 252.0], [1883.0, 250.0], [1887.0, 253.7142857142857], [1879.0, 242.0], [1871.0, 247.0], [1867.0, 249.0], [1863.0, 269.0], [1.0, 3345.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[878.0165000000009, 224.86159999999919]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1888.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 167.2, "minX": 1.70301882E12, "maxY": 412860.55, "series": [{"data": [[1.70301882E12, 412860.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70301882E12, 167.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70301882E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 224.86159999999919, "minX": 1.70301882E12, "maxY": 1201.5952380952383, "series": [{"data": [[1.70301882E12, 1201.5952380952383]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70301882E12, 724.3809523809523]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70301882E12, 224.86159999999919]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70301882E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.952899999999998, "minX": 1.70301882E12, "maxY": 703.0714285714287, "series": [{"data": [[1.70301882E12, 9.11904761904762]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70301882E12, 703.0714285714287]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70301882E12, 2.952899999999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70301882E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 142.0215999999999, "minX": 1.70301882E12, "maxY": 1194.5952380952383, "series": [{"data": [[1.70301882E12, 1194.5952380952383]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70301882E12, 218.4761904761905]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70301882E12, 142.0215999999999]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70301882E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 252.0, "minX": 1.70301882E12, "maxY": 3345.0, "series": [{"data": [[1.70301882E12, 3345.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70301882E12, 1366.3000000000104]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70301882E12, 3345.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70301882E12, 3250.45]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70301882E12, 252.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70301882E12, 607.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70301882E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 75.0, "minX": 3.0, "maxY": 3085.0, "series": [{"data": [[4.0, 1804.5], [3168.0, 607.0], [3.0, 3080.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[595.0, 159.0], [2565.0, 160.0], [10.0, 3079.5], [3168.0, 75.0], [3.0, 3085.0], [3269.0, 220.0], [470.0, 161.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3269.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 3080.5, "series": [{"data": [[4.0, 1637.0], [3168.0, 601.5], [3.0, 3080.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[595.0, 0.0], [2565.0, 0.0], [10.0, 0.0], [3168.0, 0.0], [3.0, 0.0], [3269.0, 0.0], [470.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3269.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 168.06666666666666, "minX": 1.70301882E12, "maxY": 168.06666666666666, "series": [{"data": [[1.70301882E12, 168.06666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70301882E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.70301882E12, "maxY": 167.3, "series": [{"data": [[1.70301882E12, 0.06666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70301882E12, 0.7]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70301882E12, 167.3]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70301882E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70301882E12, "maxY": 166.63333333333333, "series": [{"data": [[1.70301882E12, 166.63333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70301882E12, 0.03333333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70301882E12, 0.7]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70301882E12, 0.6666666666666666]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70301882E12, 0.03333333333333333]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70301882E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.70301882E12, "maxY": 167.3, "series": [{"data": [[1.70301882E12, 0.7666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70301882E12, 167.3]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70301882E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

